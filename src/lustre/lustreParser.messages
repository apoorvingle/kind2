one_expr: BVNOT TRUE VAR
##
## Ends in an error in state: 102.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> BVNOT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## BVNOT pexpr(nonquantified)
##

Syntax Error!

one_expr: BVNOT XOR
##
## Ends in an error in state: 96.
##
## pexpr(nonquantified) -> BVNOT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## BVNOT
##

Syntax Error!

one_expr: COLON COLON SYM COLON COLON XOR
##
## Ends in an error in state: 100.
##
## separated_nonempty_list(two_colons,ident) -> ident two_colons . separated_nonempty_list(two_colons,ident) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident two_colons
##

Syntax Error!

one_expr: COLON COLON SYM VAR
##
## Ends in an error in state: 99.
##
## separated_nonempty_list(two_colons,ident) -> ident . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## separated_nonempty_list(two_colons,ident) -> ident . two_colons separated_nonempty_list(two_colons,ident) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

one_expr: COLON COLON XOR
##
## Ends in an error in state: 97.
##
## pexpr(nonquantified) -> two_colons . separated_nonempty_list(two_colons,ident) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## two_colons
##

Syntax Error!

one_expr: COLON XOR
##
## Ends in an error in state: 94.
##
## two_colons -> COLON . COLON [ SYM REQUIRE MODE GUARANTEE ENSURE ASSUME ]
##
## The known suffix of the stack is as follows:
## COLON
##

Syntax Error

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN RPAREN COMMA TRUE RSQBRACKET
##
## Ends in an error in state: 223.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 222, spurious reduction of production pexpr_list(nonquantified) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN RPAREN COMMA XOR
##
## Ends in an error in state: 221.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA . pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN RPAREN XOR
##
## Ends in an error in state: 219.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN . COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 218.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 213.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 212.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE WITH
##
## Ends in an error in state: 211.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY XOR
##
## Ends in an error in state: 210.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM XOR
##
## Ends in an error in state: 209.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN RESTART XOR
##
## Ends in an error in state: 208.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART . ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART . ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN RESTART
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA LPAREN XOR
##
## Ends in an error in state: 207.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN . RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN . RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA LPAREN
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA SYM LPAREN RPAREN COMMA TRUE RSQBRACKET
##
## Ends in an error in state: 231.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 222, spurious reduction of production pexpr_list(nonquantified) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA SYM LPAREN RPAREN COMMA XOR
##
## Ends in an error in state: 230.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA . pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA SYM LPAREN RPAREN XOR
##
## Ends in an error in state: 228.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN . COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA SYM LPAREN TRUE RESTART
##
## Ends in an error in state: 227.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA SYM LPAREN XOR
##
## Ends in an error in state: 226.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA ident LPAREN
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA SYM XOR
##
## Ends in an error in state: 225.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA ident . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA ident
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 206.
##
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA . ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA . ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA . LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) COMMA . LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified) COMMA
##

Syntax Error!

one_expr: CONDACT LPAREN TRUE WITH
##
## Ends in an error in state: 205.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) . COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) . COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) . COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN pexpr(nonquantified) . COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(nonquantified)
##

Syntax Error!

one_expr: CONDACT LPAREN XOR
##
## Ends in an error in state: 93.
##
## pexpr(nonquantified) -> CONDACT LPAREN . pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN . pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN . pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT LPAREN . pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN
##

Syntax Error!

one_expr: CONDACT XOR
##
## Ends in an error in state: 92.
##
## pexpr(nonquantified) -> CONDACT . LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT . LPAREN pexpr(nonquantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT . LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CONDACT . LPAREN pexpr(nonquantified) COMMA LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT
##

Syntax Error!

one_expr: CURRENT TRUE WHEN
##
## Ends in an error in state: 233.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> CURRENT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CURRENT pexpr(nonquantified)
##

Syntax Error!

one_expr: CURRENT XOR
##
## Ends in an error in state: 91.
##
## pexpr(nonquantified) -> CURRENT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CURRENT
##

Syntax Error!

one_expr: EXISTS LPAREN RPAREN TRUE VAR
##
## Ends in an error in state: 234.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(nonquantified)
##

Syntax Error!

one_expr: EXISTS LPAREN RPAREN XOR
##
## Ends in an error in state: 89.
##
## pexpr(nonquantified) -> EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents)
##

Syntax Error!

one_expr: EXISTS XOR
##
## Ends in an error in state: 88.
##
## pexpr(nonquantified) -> EXISTS . tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## EXISTS
##

Syntax Error!

one_expr: FBY LPAREN TRUE COMMA NUMERAL COMMA TRUE WITH
##
## Ends in an error in state: 239.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> FBY LPAREN pexpr(nonquantified) COMMA NUMERAL COMMA pexpr(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(nonquantified) COMMA NUMERAL COMMA pexpr(nonquantified)
##

Syntax Error!

one_expr: FBY LPAREN TRUE COMMA NUMERAL COMMA XOR
##
## Ends in an error in state: 238.
##
## pexpr(nonquantified) -> FBY LPAREN pexpr(nonquantified) COMMA NUMERAL COMMA . pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(nonquantified) COMMA NUMERAL COMMA
##

Syntax Error!

one_expr: FBY LPAREN TRUE COMMA NUMERAL XOR
##
## Ends in an error in state: 237.
##
## pexpr(nonquantified) -> FBY LPAREN pexpr(nonquantified) COMMA NUMERAL . COMMA pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(nonquantified) COMMA NUMERAL
##

Syntax Error!

one_expr: FBY LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 236.
##
## pexpr(nonquantified) -> FBY LPAREN pexpr(nonquantified) COMMA . NUMERAL COMMA pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(nonquantified) COMMA
##

Syntax Error!

one_expr: FBY LPAREN TRUE WITH
##
## Ends in an error in state: 235.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> FBY LPAREN pexpr(nonquantified) . COMMA NUMERAL COMMA pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(nonquantified)
##

Syntax Error!

one_expr: FBY LPAREN XOR
##
## Ends in an error in state: 86.
##
## pexpr(nonquantified) -> FBY LPAREN . pexpr(nonquantified) COMMA NUMERAL COMMA pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN
##

Syntax Error!

one_expr: FBY XOR
##
## Ends in an error in state: 85.
##
## pexpr(nonquantified) -> FBY . LPAREN pexpr(nonquantified) COMMA NUMERAL COMMA pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY
##

Syntax Error! Perhaps a missing identifier in type.

one_expr: FORALL LPAREN RPAREN TRUE VAR
##
## Ends in an error in state: 250.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(nonquantified)
##

Syntax Error!

one_expr: FORALL LPAREN RPAREN XOR
##
## Ends in an error in state: 249.
##
## pexpr(nonquantified) -> FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents)
##

Syntax Error!

one_expr: FORALL LPAREN SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 55.
##
## option(SEMICOLON) -> SEMICOLON . [ RPAREN ]
## tlist_tail(SEMICOLON,RPAREN,typed_idents) -> typed_idents SEMICOLON . tlist_tail(SEMICOLON,RPAREN,typed_idents) [ WITH WHEN UINT8 UINT64 UINT32 UINT16 TRUE SYM REQUIRE REAL PRE NUMERAL NOT MODE MINUS MERGE LSQBRACKET LPAREN LCURLYBRACKET LAST INT8 INT64 INT32 INT16 INT IF HASH GUARANTEE FORALL FBY FALSE EXISTS ENSURE DECIMAL CURRENT CONDACT COLON BVNOT ASSUME ]
##
## The known suffix of the stack is as follows:
## typed_idents SEMICOLON
##

Syntax Error!

one_expr: FORALL LPAREN SYM COLON ASSUME WHEN
##
## Ends in an error in state: 54.
##
## tlist_tail(SEMICOLON,RPAREN,typed_idents) -> typed_idents . option(SEMICOLON) RPAREN [ WITH WHEN UINT8 UINT64 UINT32 UINT16 TRUE SYM REQUIRE REAL PRE NUMERAL NOT MODE MINUS MERGE LSQBRACKET LPAREN LCURLYBRACKET LAST INT8 INT64 INT32 INT16 INT IF HASH GUARANTEE FORALL FBY FALSE EXISTS ENSURE DECIMAL CURRENT CONDACT COLON BVNOT ASSUME ]
## tlist_tail(SEMICOLON,RPAREN,typed_idents) -> typed_idents . SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents) [ WITH WHEN UINT8 UINT64 UINT32 UINT16 TRUE SYM REQUIRE REAL PRE NUMERAL NOT MODE MINUS MERGE LSQBRACKET LPAREN LCURLYBRACKET LAST INT8 INT64 INT32 INT16 INT IF HASH GUARANTEE FORALL FBY FALSE EXISTS ENSURE DECIMAL CURRENT CONDACT COLON BVNOT ASSUME ]
##
## The known suffix of the stack is as follows:
## typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
##

Syntax Error!

one_expr: FORALL LPAREN SYM COLON UINT8 XOR
##
## Ends in an error in state: 242.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ WHEN SEMICOLON RPAREN RCURLYBRACKET CARET ]
## typed_idents -> ident_list_pos COLON lustre_type . [ WHEN SEMICOLON RPAREN RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## ident_list_pos COLON lustre_type
##

Syntax Error! Possible diagnosis includes:
1. A missing colon between a variable and its type
2. A missing semicolon separating variables
3. A missing type for a variable

one_expr: FORALL LPAREN SYM COLON XOR
##
## Ends in an error in state: 58.
##
## typed_idents -> ident_list_pos COLON . lustre_type [ WHEN SEMICOLON RPAREN RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## ident_list_pos COLON
##

Syntax Error!

one_expr: FORALL LPAREN SYM COMMA XOR
##
## Ends in an error in state: 244.
##
## ident_list_pos -> ident COMMA . ident_list_pos [ COLON ]
##
## The known suffix of the stack is as follows:
## ident COMMA
##

Syntax Error! Perhaps a missing colon between an identifier and type.

one_expr: FORALL LPAREN SYM XOR
##
## Ends in an error in state: 243.
##
## ident_list_pos -> ident . [ COLON ]
## ident_list_pos -> ident . COMMA ident_list_pos [ COLON ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error! Possible diagnosis includes:
1. A missing colon between a variable and its type
2. A missing semicolon separating variables
3. A missing type for a variable

one_expr: FORALL LPAREN XOR
##
## Ends in an error in state: 52.
##
## tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) -> LPAREN . tlist_tail(SEMICOLON,RPAREN,typed_idents) [ WITH UINT8 UINT64 UINT32 UINT16 TRUE SYM REQUIRE REAL PRE NUMERAL NOT MODE MINUS MERGE LSQBRACKET LPAREN LCURLYBRACKET LAST INT8 INT64 INT32 INT16 INT IF HASH GUARANTEE FORALL FBY FALSE EXISTS ENSURE DECIMAL CURRENT CONDACT COLON BVNOT ASSUME ]
## tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) -> LPAREN . RPAREN [ WITH UINT8 UINT64 UINT32 UINT16 TRUE SYM REQUIRE REAL PRE NUMERAL NOT MODE MINUS MERGE LSQBRACKET LPAREN LCURLYBRACKET LAST INT8 INT64 INT32 INT16 INT IF HASH GUARANTEE FORALL FBY FALSE EXISTS ENSURE DECIMAL CURRENT CONDACT COLON BVNOT ASSUME ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

one_expr: FORALL XOR
##
## Ends in an error in state: 51.
##
## pexpr(nonquantified) -> FORALL . tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FORALL
##

Syntax Error!

one_expr: HASH LPAREN TRUE RSQBRACKET
##
## Ends in an error in state: 251.
##
## pexpr(nonquantified) -> HASH LPAREN pexpr_list(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## HASH LPAREN pexpr_list(nonquantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 222, spurious reduction of production pexpr_list(nonquantified) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: HASH LPAREN XOR
##
## Ends in an error in state: 50.
##
## pexpr(nonquantified) -> HASH LPAREN . pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## HASH LPAREN
##

Syntax Error!

one_expr: HASH XOR
##
## Ends in an error in state: 49.
##
## pexpr(nonquantified) -> HASH . LPAREN pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## HASH
##

Syntax Error!

one_expr: IF TRUE THEN TRUE ELSE TRUE VAR
##
## Ends in an error in state: 257.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> IF pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified)
##

Syntax Error! Missing delimiter, perhaps a missing semicolon at the end of statement.

one_expr: IF TRUE THEN TRUE ELSE XOR
##
## Ends in an error in state: 256.
##
## pexpr(nonquantified) -> IF pexpr(nonquantified) THEN pexpr(nonquantified) ELSE . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) THEN pexpr(nonquantified) ELSE
##

Syntax Error!

one_expr: IF TRUE THEN TRUE WITH
##
## Ends in an error in state: 255.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> IF pexpr(nonquantified) THEN pexpr(nonquantified) . ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) THEN pexpr(nonquantified)
##

Syntax Error!

one_expr: IF TRUE THEN XOR
##
## Ends in an error in state: 254.
##
## pexpr(nonquantified) -> IF pexpr(nonquantified) THEN . pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) THEN
##

Syntax Error! Perhaps a missing parenthesis.

one_expr: IF TRUE WITH
##
## Ends in an error in state: 253.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> IF pexpr(nonquantified) . THEN pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified)
##

Syntax Error! Perhaps a missing/unbalanced parenthesis.

one_expr: IF XOR
##
## Ends in an error in state: 48.
##
## pexpr(nonquantified) -> IF . pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF
##

Syntax Error!

one_expr: INT TRUE VAR
##
## Ends in an error in state: 258.
##
## pexpr(nonquantified) -> INT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT pexpr(nonquantified)
##

Syntax Error! Missing delimiter, perhaps a missing semicolon at the end of statement.

one_expr: INT XOR
##
## Ends in an error in state: 47.
##
## pexpr(nonquantified) -> INT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT
##

Syntax Error!

one_expr: INT16 TRUE VAR
##
## Ends in an error in state: 259.
##
## pexpr(nonquantified) -> INT16 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT16 pexpr(nonquantified)
##

Syntax Error! Missing delimiter, perhaps a missing semicolon at the end of statement.

one_expr: INT16 XOR
##
## Ends in an error in state: 46.
##
## pexpr(nonquantified) -> INT16 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT16
##

Syntax Error!

one_expr: INT32 TRUE VAR
##
## Ends in an error in state: 260.
##
## pexpr(nonquantified) -> INT32 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT32 pexpr(nonquantified)
##

Syntax Error!

one_expr: INT32 XOR
##
## Ends in an error in state: 45.
##
## pexpr(nonquantified) -> INT32 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT32
##

Syntax Error!

one_expr: INT64 TRUE VAR
##
## Ends in an error in state: 261.
##
## pexpr(nonquantified) -> INT64 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT64 pexpr(nonquantified)
##

Syntax Error!

one_expr: INT64 XOR
##
## Ends in an error in state: 44.
##
## pexpr(nonquantified) -> INT64 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT64
##

Syntax Error!

one_expr: INT8 TRUE VAR
##
## Ends in an error in state: 262.
##
## pexpr(nonquantified) -> INT8 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT8 pexpr(nonquantified)
##

Syntax Error!

one_expr: INT8 XOR
##
## Ends in an error in state: 43.
##
## pexpr(nonquantified) -> INT8 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT8
##

Syntax Error!

one_expr: LAST XOR
##
## Ends in an error in state: 39.
##
## pexpr(nonquantified) -> LAST . ident_or_quotident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LAST
##

Syntax Error!

one_expr: LCURLYBRACKET TRUE RSQBRACKET
##
## Ends in an error in state: 263.
##
## pexpr(nonquantified) -> LCURLYBRACKET pexpr_list(nonquantified) . RCURLYBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LCURLYBRACKET pexpr_list(nonquantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 222, spurious reduction of production pexpr_list(nonquantified) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error! Perhaps a missing/unbalanced curly brace or parenthesis.

one_expr: LCURLYBRACKET XOR
##
## Ends in an error in state: 38.
##
## pexpr(nonquantified) -> LCURLYBRACKET . pexpr_list(nonquantified) RCURLYBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LCURLYBRACKET
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 288.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT RPAREN LPAREN XOR
##
## Ends in an error in state: 287.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT RPAREN XOR
##
## Ends in an error in state: 286.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT TRUE RESTART
##
## Ends in an error in state: 285.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT XOR
##
## Ends in an error in state: 284.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL XOR
##
## Ends in an error in state: 283.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL . DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 281.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 280.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 279.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE WITH
##
## Ends in an error in state: 278.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) . INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY XOR
##
## Ends in an error in state: 277.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY . pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 276.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN . EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE WITH
##
## Ends in an error in state: 275.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) . RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) . RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM EVERY XOR
##
## Ends in an error in state: 274.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY . pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY . pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART SYM XOR
##
## Ends in an error in state: 273.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident . EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART ident . EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN RESTART XOR
##
## Ends in an error in state: 272.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART . ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN RESTART . ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART
##

Syntax Error!

one_expr: LPAREN ACTIVATE LPAREN XOR
##
## Ends in an error in state: 271.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN . RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE LPAREN . RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 316.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 315.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 314.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE WITH
##
## Ends in an error in state: 313.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY XOR
##
## Ends in an error in state: 312.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART XOR
##
## Ends in an error in state: 311.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 309.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RPAREN LPAREN XOR
##
## Ends in an error in state: 308.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RPAREN XOR
##
## Ends in an error in state: 307.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT TRUE RCURLYBRACKET
##
## Ends in an error in state: 306.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT XOR
##
## Ends in an error in state: 305.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE INITIAL XOR
##
## Ends in an error in state: 304.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL . DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL . DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) INITIAL
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 302.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 301.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 300.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE WITH
##
## Ends in an error in state: 299.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY XOR
##
## Ends in an error in state: 298.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RESTART XOR
##
## Ends in an error in state: 297.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RESTART
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 295.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 294.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 293.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY TRUE WITH
##
## Ends in an error in state: 292.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) . INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) . INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY pexpr(nonquantified) . RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM EVERY XOR
##
## Ends in an error in state: 291.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY . pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY . pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident EVERY . pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY
##

Syntax Error!

one_expr: LPAREN ACTIVATE SYM XOR
##
## Ends in an error in state: 290.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE ident . EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident . EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE ident . EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident
##

Syntax Error!

one_expr: LPAREN ACTIVATE XOR
##
## Ends in an error in state: 270.
##
## pexpr(nonquantified) -> LPAREN ACTIVATE . ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE . ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE . LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE . ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE . LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN ACTIVATE . ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE
##

Syntax Error!

one_expr: LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 268.
##
## pexpr(nonquantified) -> LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 214, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 267.
##
## pexpr(nonquantified) -> LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN
##

Syntax Error!

one_expr: LPAREN RESTART SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 266.
##
## pexpr(nonquantified) -> LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN
##

Syntax Error!

one_expr: LPAREN RESTART SYM EVERY TRUE WITH
##
## Ends in an error in state: 265.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN RESTART ident EVERY pexpr(nonquantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN RESTART SYM EVERY XOR
##
## Ends in an error in state: 37.
##
## pexpr(nonquantified) -> LPAREN RESTART ident EVERY . pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY
##

Syntax Error!

one_expr: LPAREN RESTART SYM XOR
##
## Ends in an error in state: 36.
##
## pexpr(nonquantified) -> LPAREN RESTART ident . EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident
##

Syntax Error!

one_expr: LPAREN RESTART XOR
##
## Ends in an error in state: 35.
##
## pexpr(nonquantified) -> LPAREN RESTART . ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART
##

Syntax Error!

one_expr: LPAREN TRUE COMMA TRUE RSQBRACKET
##
## Ends in an error in state: 335.
##
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) COMMA pexpr_list(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(nonquantified) COMMA pexpr_list(nonquantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 222, spurious reduction of production pexpr_list(nonquantified) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 334.
##
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) COMMA . pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(nonquantified) COMMA
##

Syntax Error!

one_expr: LPAREN TRUE VAR
##
## Ends in an error in state: 318.
##
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) . COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) . WITH nonempty_list(label_or_index) EQUALS pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(nonquantified)
##

Syntax Error! Perhaps a missing/unbalanced parenthesis.

one_expr: LPAREN TRUE WITH DOT SYM XOR
##
## Ends in an error in state: 331.
##
## nonempty_list(label_or_index) -> label_or_index . [ EQUALS ]
## nonempty_list(label_or_index) -> label_or_index . nonempty_list(label_or_index) [ EQUALS ]
##
## The known suffix of the stack is as follows:
## label_or_index
##

Syntax Error!

one_expr: LPAREN TRUE WITH DOT XOR
##
## Ends in an error in state: 325.
##
## label_or_index -> DOT . ident [ LSQBRACKET EQUALS DOTPERCENT DOT ]
##
## The known suffix of the stack is as follows:
## DOT
##

Syntax Error!

one_expr: LPAREN TRUE WITH DOTPERCENT TRUE EQUALS TRUE WITH
##
## Ends in an error in state: 329.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) WITH nonempty_list(label_or_index) EQUALS pexpr(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(nonquantified) WITH nonempty_list(label_or_index) EQUALS pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN TRUE WITH DOTPERCENT TRUE EQUALS XOR
##
## Ends in an error in state: 328.
##
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) WITH nonempty_list(label_or_index) EQUALS . pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(nonquantified) WITH nonempty_list(label_or_index) EQUALS
##

Syntax Error!

one_expr: LPAREN TRUE WITH DOTPERCENT TRUE WITH
##
## Ends in an error in state: 324.
##
## label_or_index -> DOTPERCENT pexpr(nonquantified) . [ LSQBRACKET EQUALS DOTPERCENT DOT ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## DOTPERCENT pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN TRUE WITH DOTPERCENT XOR
##
## Ends in an error in state: 323.
##
## label_or_index -> DOTPERCENT . pexpr(nonquantified) [ LSQBRACKET EQUALS DOTPERCENT DOT ]
##
## The known suffix of the stack is as follows:
## DOTPERCENT
##

Syntax Error!

one_expr: LPAREN TRUE WITH LSQBRACKET TRUE WITH
##
## Ends in an error in state: 321.
##
## label_or_index -> LSQBRACKET pexpr(nonquantified) . RSQBRACKET [ LSQBRACKET EQUALS DOTPERCENT DOT ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET pexpr(nonquantified)
##

Syntax Error!

one_expr: LPAREN TRUE WITH LSQBRACKET XOR
##
## Ends in an error in state: 320.
##
## label_or_index -> LSQBRACKET . pexpr(nonquantified) RSQBRACKET [ LSQBRACKET EQUALS DOTPERCENT DOT ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET
##

Syntax Error!

one_expr: LPAREN TRUE WITH XOR
##
## Ends in an error in state: 319.
##
## pexpr(nonquantified) -> LPAREN pexpr(nonquantified) WITH . nonempty_list(label_or_index) EQUALS pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(nonquantified) WITH
##

Syntax Error! Perhaps a missing/unbalanced parenthesis.

one_expr: LPAREN XOR
##
## Ends in an error in state: 34.
##
## pexpr(nonquantified) -> LPAREN . pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . pexpr(nonquantified) COMMA pexpr_list(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . pexpr(nonquantified) WITH nonempty_list(label_or_index) EQUALS pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . ACTIVATE ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . ACTIVATE ident EVERY pexpr(nonquantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . ACTIVATE LPAREN RESTART ident EVERY pexpr(nonquantified) RPAREN EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . ACTIVATE ident EVERY pexpr(nonquantified) RESTART EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> LPAREN . RESTART ident EVERY pexpr(nonquantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(nonquantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

one_expr: LSQBRACKET TRUE COMMA XOR
##
## Ends in an error in state: 216.
##
## separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) COMMA . separated_nonempty_list(COMMA,pexpr(nonquantified)) [ RSQBRACKET RPAREN RESTART RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) COMMA
##

Syntax Error!

one_expr: LSQBRACKET TRUE RPAREN
##
## Ends in an error in state: 337.
##
## pexpr(nonquantified) -> LSQBRACKET pexpr_list(nonquantified) . RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET pexpr_list(nonquantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 215, spurious reduction of production separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) 
## In state 222, spurious reduction of production pexpr_list(nonquantified) -> separated_nonempty_list(COMMA,pexpr(nonquantified)) 
##

Syntax Error!

one_expr: LSQBRACKET TRUE WITH
##
## Ends in an error in state: 215.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) . [ RSQBRACKET RPAREN RESTART RCURLYBRACKET ]
## separated_nonempty_list(COMMA,pexpr(nonquantified)) -> pexpr(nonquantified) . COMMA separated_nonempty_list(COMMA,pexpr(nonquantified)) [ RSQBRACKET RPAREN RESTART RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified)
##

Syntax Error!

one_expr: LSQBRACKET XOR
##
## Ends in an error in state: 33.
##
## pexpr(nonquantified) -> LSQBRACKET . pexpr_list(nonquantified) RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET
##

Syntax Error!

one_expr: MERGE LPAREN SYM SEMICOLON TRUE SEMICOLON TRUE WITH
##
## Ends in an error in state: 341.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> MERGE LPAREN ident SEMICOLON pexpr(nonquantified) SEMICOLON pexpr(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON pexpr(nonquantified) SEMICOLON pexpr(nonquantified)
##

Syntax Error!

one_expr: MERGE LPAREN SYM SEMICOLON TRUE SEMICOLON XOR
##
## Ends in an error in state: 340.
##
## pexpr(nonquantified) -> MERGE LPAREN ident SEMICOLON pexpr(nonquantified) SEMICOLON . pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON pexpr(nonquantified) SEMICOLON
##

Syntax Error!

one_expr: MERGE LPAREN SYM SEMICOLON TRUE WITH
##
## Ends in an error in state: 339.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> MERGE LPAREN ident SEMICOLON pexpr(nonquantified) . SEMICOLON pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON pexpr(nonquantified)
##

Syntax Error!

one_expr: MERGE LPAREN SYM SEMICOLON XOR
##
## Ends in an error in state: 32.
##
## pexpr(nonquantified) -> MERGE LPAREN ident SEMICOLON . pexpr(nonquantified) SEMICOLON pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON
##

Syntax Error!

one_expr: MERGE LPAREN SYM XOR
##
## Ends in an error in state: 31.
##
## pexpr(nonquantified) -> MERGE LPAREN ident . SEMICOLON pexpr(nonquantified) SEMICOLON pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident
##

Syntax Error!

one_expr: MERGE LPAREN XOR
##
## Ends in an error in state: 30.
##
## pexpr(nonquantified) -> MERGE LPAREN . ident SEMICOLON pexpr(nonquantified) SEMICOLON pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN
##

Syntax Error!

one_expr: MERGE SYM LPAREN TRUE ARROW ASSUME RPAREN VAR
##
## Ends in an error in state: 353.
##
## nonempty_list(merge_case) -> merge_case . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## nonempty_list(merge_case) -> merge_case . nonempty_list(merge_case) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## merge_case
##

Syntax Error!

one_expr: MERGE SYM LPAREN TRUE ARROW TRUE WITH
##
## Ends in an error in state: 349.
##
## merge_case -> LPAREN merge_case_id ARROW pexpr(nonquantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH LPAREN INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN merge_case_id ARROW pexpr(nonquantified)
##

Syntax Error!

one_expr: MERGE SYM LPAREN TRUE ARROW XOR
##
## Ends in an error in state: 348.
##
## merge_case -> LPAREN merge_case_id ARROW . pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH LPAREN INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN merge_case_id ARROW
##

Syntax Error!

one_expr: MERGE SYM LPAREN TRUE XOR
##
## Ends in an error in state: 347.
##
## merge_case -> LPAREN merge_case_id . ARROW pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH LPAREN INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN merge_case_id
##

Syntax Error!

one_expr: MERGE SYM LPAREN XOR
##
## Ends in an error in state: 344.
##
## merge_case -> LPAREN . merge_case_id ARROW pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH LPAREN INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

one_expr: MERGE SYM XOR
##
## Ends in an error in state: 343.
##
## pexpr(nonquantified) -> MERGE ident . nonempty_list(merge_case) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE ident
##

Syntax Error!

one_expr: MERGE XOR
##
## Ends in an error in state: 29.
##
## pexpr(nonquantified) -> MERGE . LPAREN ident SEMICOLON pexpr(nonquantified) SEMICOLON pexpr(nonquantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> MERGE . ident nonempty_list(merge_case) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE
##

Syntax Error! Perhaps a missing constant in expression.

one_expr: MINUS TRUE VAR
##
## Ends in an error in state: 355.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> MINUS pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MINUS pexpr(nonquantified)
##

Syntax Error!

one_expr: MINUS XOR
##
## Ends in an error in state: 28.
##
## pexpr(nonquantified) -> MINUS . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Syntax Error!

one_expr: NOT TRUE VAR
##
## Ends in an error in state: 356.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> NOT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT pexpr(nonquantified)
##

Syntax Error!

one_expr: NOT XOR
##
## Ends in an error in state: 27.
##
## pexpr(nonquantified) -> NOT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT
##

Syntax Error!

one_expr: PRE TRUE VAR
##
## Ends in an error in state: 357.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> PRE pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## PRE pexpr(nonquantified)
##

Syntax Error! Perhaps a missing argument to `pre`

one_expr: PRE XOR
##
## Ends in an error in state: 25.
##
## pexpr(nonquantified) -> PRE . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## PRE
##

Syntax Error! Perhaps a missing argument to `pre`.

one_expr: REAL TRUE VAR
##
## Ends in an error in state: 358.
##
## pexpr(nonquantified) -> REAL pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## REAL pexpr(nonquantified)
##

Syntax Error!

one_expr: REAL XOR
##
## Ends in an error in state: 24.
##
## pexpr(nonquantified) -> REAL . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## REAL
##

Syntax Error!

one_expr: SYM LCURLYBRACKET SYM EQUALS ASSUME SEMICOLON XOR
##
## Ends in an error in state: 189.
##
## option(SEMICOLON) -> SEMICOLON . [ RCURLYBRACKET ]
## tlist_tail(SEMICOLON,RCURLYBRACKET,record_field_assign) -> record_field_assign SEMICOLON . tlist_tail(SEMICOLON,RCURLYBRACKET,record_field_assign) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## record_field_assign SEMICOLON
##

Syntax Error!

one_expr: SYM LCURLYBRACKET SYM EQUALS TRUE WITH
##
## Ends in an error in state: 193.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## record_field_assign -> ident EQUALS pexpr(nonquantified) . [ SEMICOLON RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## ident EQUALS pexpr(nonquantified)
##

Syntax Error!

one_expr: SYM LCURLYBRACKET SYM EQUALS XOR
##
## Ends in an error in state: 192.
##
## record_field_assign -> ident EQUALS . pexpr(nonquantified) [ SEMICOLON RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## ident EQUALS
##

Syntax Error!

one_expr: SYM LCURLYBRACKET SYM XOR
##
## Ends in an error in state: 191.
##
## record_field_assign -> ident . EQUALS pexpr(nonquantified) [ SEMICOLON RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

one_expr: SYM LCURLYBRACKET XOR
##
## Ends in an error in state: 185.
##
## tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,record_field_assign) -> LCURLYBRACKET . tlist_tail(SEMICOLON,RCURLYBRACKET,record_field_assign) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,record_field_assign) -> LCURLYBRACKET . RCURLYBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LCURLYBRACKET
##

Syntax Error!

one_expr: SYM LPARAMBRACKET ENUM LCURLYBRACKET SYM SEMICOLON
##
## Ends in an error in state: 68.
##
## enum_type -> ENUM LCURLYBRACKET ident_list . RCURLYBRACKET [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## ENUM LCURLYBRACKET ident_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 70, spurious reduction of production separated_nonempty_list(COMMA,ident) -> ident 
## In state 8, spurious reduction of production ident_list -> separated_nonempty_list(COMMA,ident) 
##

Syntax Error!

one_expr: SYM LPARAMBRACKET ENUM LCURLYBRACKET XOR
##
## Ends in an error in state: 67.
##
## enum_type -> ENUM LCURLYBRACKET . ident_list RCURLYBRACKET [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## ENUM LCURLYBRACKET
##

Syntax Error!

one_expr: SYM LPARAMBRACKET ENUM XOR
##
## Ends in an error in state: 66.
##
## enum_type -> ENUM . LCURLYBRACKET ident_list RCURLYBRACKET [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## ENUM
##

Syntax Error!

one_expr: SYM LPARAMBRACKET LSQBRACKET UINT8 COMMA XOR
##
## Ends in an error in state: 79.
##
## separated_nonempty_list(COMMA,lustre_type) -> lustre_type COMMA . separated_nonempty_list(COMMA,lustre_type) [ RSQBRACKET ]
##
## The known suffix of the stack is as follows:
## lustre_type COMMA
##

Syntax Error!

one_expr: SYM LPARAMBRACKET LSQBRACKET UINT8 XOR
##
## Ends in an error in state: 78.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ RSQBRACKET COMMA CARET ]
## separated_nonempty_list(COMMA,lustre_type) -> lustre_type . [ RSQBRACKET ]
## separated_nonempty_list(COMMA,lustre_type) -> lustre_type . COMMA separated_nonempty_list(COMMA,lustre_type) [ RSQBRACKET ]
##
## The known suffix of the stack is as follows:
## lustre_type
##

Syntax Error!

one_expr: SYM LPARAMBRACKET LSQBRACKET XOR
##
## Ends in an error in state: 60.
##
## tuple_type -> LSQBRACKET . lustre_type_list RSQBRACKET [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET
##

Syntax Error!

one_expr: SYM LPARAMBRACKET RPARAMBRACKET LPAREN XOR
##
## Ends in an error in state: 197.
##
## node_call -> ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) LPAREN
##

Syntax Error!

one_expr: SYM LPARAMBRACKET RPARAMBRACKET XOR
##
## Ends in an error in state: 196.
##
## node_call -> ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param)
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE LSQBRACKET TRUE COMMA TRUE RSQBRACKET OF XOR
##
## Ends in an error in state: 372.
##
## lustre_type -> SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified) RSQBRACKET OF . INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified) RSQBRACKET OF
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE LSQBRACKET TRUE COMMA TRUE RSQBRACKET XOR
##
## Ends in an error in state: 371.
##
## lustre_type -> SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified) RSQBRACKET . OF INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified) RSQBRACKET
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE LSQBRACKET TRUE COMMA TRUE WITH
##
## Ends in an error in state: 370.
##
## lustre_type -> SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified) . RSQBRACKET OF INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified)
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE LSQBRACKET TRUE COMMA XOR
##
## Ends in an error in state: 369.
##
## lustre_type -> SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA . pexpr(nonquantified) RSQBRACKET OF INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## SUBRANGE LSQBRACKET pexpr(nonquantified) COMMA
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE LSQBRACKET TRUE WITH
##
## Ends in an error in state: 368.
##
## lustre_type -> SUBRANGE LSQBRACKET pexpr(nonquantified) . COMMA pexpr(nonquantified) RSQBRACKET OF INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## SUBRANGE LSQBRACKET pexpr(nonquantified)
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE LSQBRACKET XOR
##
## Ends in an error in state: 17.
##
## lustre_type -> SUBRANGE LSQBRACKET . pexpr(nonquantified) COMMA pexpr(nonquantified) RSQBRACKET OF INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## SUBRANGE LSQBRACKET
##

Syntax Error!

one_expr: SYM LPARAMBRACKET SUBRANGE XOR
##
## Ends in an error in state: 16.
##
## lustre_type -> SUBRANGE . LSQBRACKET pexpr(nonquantified) COMMA pexpr(nonquantified) RSQBRACKET OF INT [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## SUBRANGE
##

Syntax Error!

one_expr: SYM LPARAMBRACKET UINT8 CARET TRUE WITH
##
## Ends in an error in state: 241.
##
## array_type -> lustre_type CARET pexpr(nonquantified) . [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## lustre_type CARET pexpr(nonquantified)
##

Syntax Error!

one_expr: SYM LPARAMBRACKET UINT8 CARET XOR
##
## Ends in an error in state: 84.
##
## array_type -> lustre_type CARET . pexpr(nonquantified) [ WHEN SEMICOLON RSQBRACKET RPAREN RPARAMBRACKET RCURLYBRACKET EQUALS COMMA CARET ]
##
## The known suffix of the stack is as follows:
## lustre_type CARET
##

Syntax Error! Perhaps a missing identifier in type.

one_expr: SYM LPARAMBRACKET UINT8 SEMICOLON XOR
##
## Ends in an error in state: 180.
##
## option(SEMICOLON) -> SEMICOLON . [ RPARAMBRACKET ]
## tlist_tail(SEMICOLON,RPARAMBRACKET,node_call_static_param) -> node_call_static_param SEMICOLON . tlist_tail(SEMICOLON,RPARAMBRACKET,node_call_static_param) [ SEMICOLON LPAREN ]
##
## The known suffix of the stack is as follows:
## node_call_static_param SEMICOLON
##

Syntax Error!

one_expr: SYM LPARAMBRACKET UINT8 XOR
##
## Ends in an error in state: 182.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ SEMICOLON RPARAMBRACKET CARET ]
## node_call_static_param -> lustre_type . [ SEMICOLON RPARAMBRACKET ]
##
## The known suffix of the stack is as follows:
## lustre_type
##

Syntax Error!

one_expr: SYM LPARAMBRACKET XOR
##
## Ends in an error in state: 176.
##
## tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) -> LPARAMBRACKET . tlist_tail(SEMICOLON,RPARAMBRACKET,node_call_static_param) [ SEMICOLON LPAREN ]
## tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) -> LPARAMBRACKET . RPARAMBRACKET [ SEMICOLON LPAREN ]
##
## The known suffix of the stack is as follows:
## LPARAMBRACKET
##

Syntax Error!

one_expr: SYM LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 172.
##
## separated_nonempty_list(COMMA,expr) -> pexpr(nonquantified) COMMA . separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) COMMA
##

Syntax Error!

one_expr: SYM LPAREN TRUE WITH
##
## Ends in an error in state: 115.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## separated_nonempty_list(COMMA,expr) -> pexpr(nonquantified) . [ RPAREN ]
## separated_nonempty_list(COMMA,expr) -> pexpr(nonquantified) . COMMA separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified)
##

Syntax Error!

one_expr: SYM LPAREN XOR
##
## Ends in an error in state: 113.
##
## node_call -> ident LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN
##

Syntax Error! Perhaps a missing boolean operator in expression.

one_expr: SYM VAR
##
## Ends in an error in state: 112.
##
## node_call -> ident . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## node_call -> ident . tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> ident . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> ident . tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,record_field_assign) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error! Perhaps a missing boolean operator in expression.

one_expr: TRUE AND TRUE VAR
##
## Ends in an error in state: 167.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) AND pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) AND pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE AND XOR
##
## Ends in an error in state: 166.
##
## pexpr(nonquantified) -> pexpr(nonquantified) AND . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) AND
##

Syntax Error!

one_expr: TRUE ARROW TRUE VAR
##
## Ends in an error in state: 171.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) ARROW pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) ARROW pexpr(nonquantified)
##

Syntax Error! Perhaps a missing statement delimiter such as a semicolon at the end of the statement.

one_expr: TRUE ARROW XOR
##
## Ends in an error in state: 170.
##
## pexpr(nonquantified) -> pexpr(nonquantified) ARROW . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) ARROW
##

Syntax Error!

one_expr: TRUE BVAND TRUE VAR
##
## Ends in an error in state: 141.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) BVAND pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) BVAND pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE BVAND XOR
##
## Ends in an error in state: 140.
##
## pexpr(nonquantified) -> pexpr(nonquantified) BVAND . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) BVAND
##

Syntax Error!

one_expr: TRUE BVOR TRUE VAR
##
## Ends in an error in state: 139.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) BVOR pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) BVOR pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE BVOR XOR
##
## Ends in an error in state: 138.
##
## pexpr(nonquantified) -> pexpr(nonquantified) BVOR . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) BVOR
##

Syntax Error!

one_expr: TRUE CARET TRUE VAR
##
## Ends in an error in state: 137.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) CARET pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) CARET pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE CARET XOR
##
## Ends in an error in state: 136.
##
## pexpr(nonquantified) -> pexpr(nonquantified) CARET . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) CARET
##

Syntax Error!

one_expr: TRUE DIV TRUE VAR
##
## Ends in an error in state: 147.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) DIV pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) DIV pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE DIV XOR
##
## Ends in an error in state: 146.
##
## pexpr(nonquantified) -> pexpr(nonquantified) DIV . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) DIV
##

Syntax Error!

one_expr: TRUE DOT XOR
##
## Ends in an error in state: 134.
##
## pexpr(nonquantified) -> pexpr(nonquantified) DOT . ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) DOT
##

Syntax Error!

one_expr: TRUE DOTPERCENT XOR
##
## Ends in an error in state: 109.
##
## pexpr(nonquantified) -> pexpr(nonquantified) DOTPERCENT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) DOTPERCENT
##

Syntax Error!

one_expr: TRUE EQUALS TRUE VAR
##
## Ends in an error in state: 165.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) EQUALS pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) EQUALS pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE EQUALS XOR
##
## Ends in an error in state: 164.
##
## pexpr(nonquantified) -> pexpr(nonquantified) EQUALS . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) EQUALS
##

Syntax Error!

one_expr: TRUE GT TRUE VAR
##
## Ends in an error in state: 163.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) GT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) GT pexpr(nonquantified)
##

Syntax Error! Illegal expression for variable assignment

one_expr: TRUE GT XOR
##
## Ends in an error in state: 162.
##
## pexpr(nonquantified) -> pexpr(nonquantified) GT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) GT
##

Syntax Error! Illegal expression for variable assignment.

one_expr: TRUE GTE TRUE VAR
##
## Ends in an error in state: 161.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) GTE pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) GTE pexpr(nonquantified)
##

Syntax Error! Illegal expression for variable assignment.
Perhaps a missing delimiter such as a semicolon.

one_expr: TRUE GTE XOR
##
## Ends in an error in state: 160.
##
## pexpr(nonquantified) -> pexpr(nonquantified) GTE . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) GTE
##

Syntax Error!

one_expr: TRUE IMPL TRUE VAR
##
## Ends in an error in state: 169.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) IMPL pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) IMPL pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE IMPL XOR
##
## Ends in an error in state: 168.
##
## pexpr(nonquantified) -> pexpr(nonquantified) IMPL . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) IMPL
##

Syntax Error!

one_expr: TRUE INTDIV TRUE VAR
##
## Ends in an error in state: 145.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) INTDIV pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) INTDIV pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE INTDIV XOR
##
## Ends in an error in state: 144.
##
## pexpr(nonquantified) -> pexpr(nonquantified) INTDIV . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) INTDIV
##

Syntax Error!

one_expr: TRUE LSH TRUE VAR
##
## Ends in an error in state: 133.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) LSH pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LSH pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE LSH XOR
##
## Ends in an error in state: 132.
##
## pexpr(nonquantified) -> pexpr(nonquantified) LSH . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LSH
##

Syntax Error!

one_expr: TRUE LSQBRACKET TRUE DOTDOT TRUE WITH
##
## Ends in an error in state: 202.
##
## array_slice -> pexpr(nonquantified) DOTDOT pexpr(nonquantified) . [ RSQBRACKET ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) DOTDOT pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE LSQBRACKET TRUE DOTDOT XOR
##
## Ends in an error in state: 201.
##
## array_slice -> pexpr(nonquantified) DOTDOT . pexpr(nonquantified) [ RSQBRACKET ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) DOTDOT
##

Syntax Error!

one_expr: TRUE LSQBRACKET TRUE WITH
##
## Ends in an error in state: 104.
##
## array_slice -> pexpr(nonquantified) . DOTDOT pexpr(nonquantified) [ RSQBRACKET ]
## array_slice -> pexpr(nonquantified) . [ RSQBRACKET ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOTDOT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE LSQBRACKET XOR
##
## Ends in an error in state: 103.
##
## pexpr(nonquantified) -> pexpr(nonquantified) LSQBRACKET . array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LSQBRACKET
##

Syntax Error!

one_expr: TRUE LT TRUE VAR
##
## Ends in an error in state: 159.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) LT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LT pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE LT XOR
##
## Ends in an error in state: 158.
##
## pexpr(nonquantified) -> pexpr(nonquantified) LT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LT
##

Syntax Error!

one_expr: TRUE LTE TRUE VAR
##
## Ends in an error in state: 157.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) LTE pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LTE pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE LTE XOR
##
## Ends in an error in state: 156.
##
## pexpr(nonquantified) -> pexpr(nonquantified) LTE . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) LTE
##

Syntax Error!

one_expr: TRUE MINUS TRUE VAR
##
## Ends in an error in state: 155.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) MINUS pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) MINUS pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE MINUS XOR
##
## Ends in an error in state: 154.
##
## pexpr(nonquantified) -> pexpr(nonquantified) MINUS . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) MINUS
##

Syntax Error!

one_expr: TRUE MOD TRUE VAR
##
## Ends in an error in state: 143.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) MOD pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) MOD pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE MOD XOR
##
## Ends in an error in state: 142.
##
## pexpr(nonquantified) -> pexpr(nonquantified) MOD . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) MOD
##

Syntax Error!

one_expr: TRUE MULT TRUE VAR
##
## Ends in an error in state: 131.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) MULT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) MULT pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE MULT XOR
##
## Ends in an error in state: 130.
##
## pexpr(nonquantified) -> pexpr(nonquantified) MULT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) MULT
##

Syntax Error!

one_expr: TRUE NEQ TRUE VAR
##
## Ends in an error in state: 153.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) NEQ pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) NEQ pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE NEQ XOR
##
## Ends in an error in state: 152.
##
## pexpr(nonquantified) -> pexpr(nonquantified) NEQ . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) NEQ
##

Syntax Error!

one_expr: TRUE OR TRUE VAR
##
## Ends in an error in state: 151.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) OR pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) OR pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE OR XOR
##
## Ends in an error in state: 150.
##
## pexpr(nonquantified) -> pexpr(nonquantified) OR . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) OR
##

Syntax Error!

one_expr: TRUE PIPE TRUE VAR
##
## Ends in an error in state: 149.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) PIPE pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) PIPE pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE PIPE XOR
##
## Ends in an error in state: 148.
##
## pexpr(nonquantified) -> pexpr(nonquantified) PIPE . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) PIPE
##

Syntax Error!

one_expr: TRUE PLUS TRUE VAR
##
## Ends in an error in state: 129.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) PLUS pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) PLUS pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE PLUS XOR
##
## Ends in an error in state: 128.
##
## pexpr(nonquantified) -> pexpr(nonquantified) PLUS . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) PLUS
##

Syntax Error!

one_expr: TRUE RSH TRUE VAR
##
## Ends in an error in state: 108.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) RSH pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) RSH pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE RSH XOR
##
## Ends in an error in state: 107.
##
## pexpr(nonquantified) -> pexpr(nonquantified) RSH . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) RSH
##

Syntax Error!

one_expr: TRUE WHEN NOT LPAREN SYM XOR
##
## Ends in an error in state: 120.
##
## clock_expr -> NOT LPAREN ident . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT LPAREN ident
##

Syntax Error!

one_expr: TRUE WHEN NOT LPAREN XOR
##
## Ends in an error in state: 119.
##
## clock_expr -> NOT LPAREN . ident RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT LPAREN
##

Syntax Error!

one_expr: TRUE WHEN NOT XOR
##
## Ends in an error in state: 118.
##
## clock_expr -> NOT . ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## clock_expr -> NOT . LPAREN ident RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT
##

Syntax Error!

one_expr: TRUE WHEN SYM LPAREN SYM XOR
##
## Ends in an error in state: 125.
##
## clock_expr -> ident LPAREN ident . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN ident
##

Syntax Error!

one_expr: TRUE WHEN SYM LPAREN XOR
##
## Ends in an error in state: 124.
##
## clock_expr -> ident LPAREN . ident RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN
##

Syntax Error!

one_expr: TRUE WHEN SYM VAR
##
## Ends in an error in state: 123.
##
## clock_expr -> ident . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## clock_expr -> ident . LPAREN ident RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

one_expr: TRUE WHEN XOR
##
## Ends in an error in state: 116.
##
## pexpr(nonquantified) -> pexpr(nonquantified) WHEN . clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) WHEN
##

Syntax Error!

one_expr: TRUE WITH
##
## Ends in an error in state: 986.
##
## one_expr -> pexpr(nonquantified) . EOF [ # ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS EOF DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE XOR TRUE VAR
##
## Ends in an error in state: 106.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) XOR pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) XOR pexpr(nonquantified)
##

Syntax Error!

one_expr: TRUE XOR XOR
##
## Ends in an error in state: 105.
##
## pexpr(nonquantified) -> pexpr(nonquantified) XOR . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) XOR
##

Syntax Error!

one_expr: UINT16 TRUE VAR
##
## Ends in an error in state: 359.
##
## pexpr(nonquantified) -> UINT16 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT16 pexpr(nonquantified)
##

Syntax Error!

one_expr: UINT16 XOR
##
## Ends in an error in state: 22.
##
## pexpr(nonquantified) -> UINT16 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT16
##

Syntax Error!

one_expr: UINT32 TRUE VAR
##
## Ends in an error in state: 360.
##
## pexpr(nonquantified) -> UINT32 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT32 pexpr(nonquantified)
##

Syntax Error!

one_expr: UINT32 XOR
##
## Ends in an error in state: 21.
##
## pexpr(nonquantified) -> UINT32 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT32
##

Syntax Error!

one_expr: UINT64 TRUE VAR
##
## Ends in an error in state: 361.
##
## pexpr(nonquantified) -> UINT64 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT64 pexpr(nonquantified)
##

Syntax Error!

one_expr: UINT64 XOR
##
## Ends in an error in state: 20.
##
## pexpr(nonquantified) -> UINT64 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT64
##

Syntax Error!

one_expr: UINT8 TRUE VAR
##
## Ends in an error in state: 362.
##
## pexpr(nonquantified) -> UINT8 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT8 pexpr(nonquantified)
##

Syntax Error!

one_expr: UINT8 XOR
##
## Ends in an error in state: 19.
##
## pexpr(nonquantified) -> UINT8 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT8
##

Syntax Error!

one_expr: WITH TRUE THEN TRUE ELSE TRUE VAR
##
## Ends in an error in state: 367.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> WITH pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified)
##

Syntax Error!

one_expr: WITH TRUE THEN TRUE ELSE XOR
##
## Ends in an error in state: 366.
##
## pexpr(nonquantified) -> WITH pexpr(nonquantified) THEN pexpr(nonquantified) ELSE . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(nonquantified) THEN pexpr(nonquantified) ELSE
##

Syntax Error!

one_expr: WITH TRUE THEN TRUE WITH
##
## Ends in an error in state: 365.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> WITH pexpr(nonquantified) THEN pexpr(nonquantified) . ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(nonquantified) THEN pexpr(nonquantified)
##

Syntax Error!

one_expr: WITH TRUE THEN XOR
##
## Ends in an error in state: 364.
##
## pexpr(nonquantified) -> WITH pexpr(nonquantified) THEN . pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(nonquantified) THEN
##

Syntax Error!

one_expr: WITH TRUE WITH
##
## Ends in an error in state: 363.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> WITH pexpr(nonquantified) . THEN pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(nonquantified)
##

Syntax Error!

one_expr: WITH XOR
##
## Ends in an error in state: 18.
##
## pexpr(nonquantified) -> WITH . pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RPARAMBRACKET RESUME RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL IF GTE GT EQUALS EOF ELSE DOTPERCENT DOTDOT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH
##

Syntax Error!

one_expr: XOR
##
## Ends in an error in state: 985.
##
## one_expr' -> . one_expr [ # ]
##
## The known suffix of the stack is as follows:
##
##

Syntax Error!

main: CONST SYM COLON ASSUME EQUALS TRUE WITH
##
## Ends in an error in state: 784.
##
## const_decl_body -> typed_ident EQUALS pexpr(nonquantified) . SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## typed_ident EQUALS pexpr(nonquantified)
##

Syntax Error!

main: CONST SYM COLON ASSUME EQUALS XOR
##
## Ends in an error in state: 783.
##
## const_decl_body -> typed_ident EQUALS . pexpr(nonquantified) SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## typed_ident EQUALS
##

Syntax Error!

main: CONST SYM COLON UINT8 XOR
##
## Ends in an error in state: 797.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ SEMICOLON EQUALS CARET ]
## const_decl_body -> ident COLON lustre_type . SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## typed_ident -> ident COLON lustre_type . [ EQUALS ]
##
## The known suffix of the stack is as follows:
## ident COLON lustre_type
##

Syntax Error!

main: CONST SYM COLON XOR
##
## Ends in an error in state: 796.
##
## const_decl_body -> ident COLON . lustre_type SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## typed_ident -> ident COLON . lustre_type [ EQUALS ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Syntax Error!

main: CONST SYM COMMA SYM COLON UINT8 XOR
##
## Ends in an error in state: 794.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ SEMICOLON CARET ]
## const_decl_body -> ident COMMA ident_list COLON lustre_type . SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ident COMMA ident_list COLON lustre_type
##

Syntax Error!

main: CONST SYM COMMA SYM COLON XOR
##
## Ends in an error in state: 793.
##
## const_decl_body -> ident COMMA ident_list COLON . lustre_type SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ident COMMA ident_list COLON
##

Syntax Error!

main: CONST SYM COMMA SYM SEMICOLON
##
## Ends in an error in state: 792.
##
## const_decl_body -> ident COMMA ident_list . COLON lustre_type SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ident COMMA ident_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 70, spurious reduction of production separated_nonempty_list(COMMA,ident) -> ident 
## In state 8, spurious reduction of production ident_list -> separated_nonempty_list(COMMA,ident) 
##

Syntax Error!

main: CONST SYM COMMA XOR
##
## Ends in an error in state: 791.
##
## const_decl_body -> ident COMMA . ident_list COLON lustre_type SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ident COMMA
##

Syntax Error!

main: CONST SYM EQUALS ASSUME SEMICOLON XOR
##
## Ends in an error in state: 799.
##
## nonempty_list(const_decl_body) -> const_decl_body . [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
## nonempty_list(const_decl_body) -> const_decl_body . nonempty_list(const_decl_body) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## const_decl_body
##

Syntax Error!

main: CONST SYM EQUALS TRUE WITH
##
## Ends in an error in state: 789.
##
## const_decl_body -> ident EQUALS pexpr(nonquantified) . SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident EQUALS pexpr(nonquantified)
##

Syntax Error!

main: CONST SYM EQUALS XOR
##
## Ends in an error in state: 788.
##
## const_decl_body -> ident EQUALS . pexpr(nonquantified) SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ident EQUALS
##

Syntax Error!

main: CONST SYM XOR
##
## Ends in an error in state: 787.
##
## const_decl_body -> ident . COLON lustre_type SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## const_decl_body -> ident . COMMA ident_list COLON lustre_type SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## const_decl_body -> ident . EQUALS pexpr(nonquantified) SEMICOLON [ VAR TYPE SYM REQUIRE NODE MODE LET GUARANTEE FUNCTION EOF ENSURE CONTRACT CONST ASSUME ]
## typed_ident -> ident . COLON lustre_type [ EQUALS ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

main: CONST XOR
##
## Ends in an error in state: 781.
##
## const_decl -> CONST . nonempty_list(const_decl_body) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONST
##

Syntax Error!

main: CONTRACT SYM LPARAMBRACKET RPARAMBRACKET XOR
##
## Ends in an error in state: 967.
##
## contract_decl -> CONTRACT ident loption(static_params) . tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params)
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN RETURNS LPAREN RPAREN SEMICOLON LET GUARANTEE TRUE SEMICOLON SSBLOCKEND
##
## Ends in an error in state: 973.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block . TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 760, spurious reduction of production nonempty_list(contract_item) -> contract_item 
## In state 758, spurious reduction of production contract_in_block -> nonempty_list(contract_item) 
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN RETURNS LPAREN RPAREN SEMICOLON LET GUARANTEE TRUE SEMICOLON TEL XOR
##
## Ends in an error in state: 974.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL . option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN RETURNS LPAREN RPAREN SEMICOLON LET XOR
##
## Ends in an error in state: 972.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET . contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN RETURNS LPAREN RPAREN SEMICOLON XOR
##
## Ends in an error in state: 971.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON . LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN RETURNS LPAREN RPAREN XOR
##
## Ends in an error in state: 970.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) . SEMICOLON LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents)
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN RETURNS XOR
##
## Ends in an error in state: 969.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS . tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS
##

Syntax Error!

main: CONTRACT SYM LPAREN RPAREN XOR
##
## Ends in an error in state: 968.
##
## contract_decl -> CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) . RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents)
##

Syntax Error!

main: CONTRACT SYM XOR
##
## Ends in an error in state: 966.
##
## contract_decl -> CONTRACT ident . loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT ident
##

Syntax Error!

main: CONTRACT XOR
##
## Ends in an error in state: 965.
##
## contract_decl -> CONTRACT . ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) SEMICOLON LET contract_in_block TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT
##

Syntax Error! Perhaps a missing/unbalanced parenthesis in contract declaration.

main: FUNCTION IMPORTED XOR
##
## Ends in an error in state: 961.
##
## decl -> FUNCTION IMPORTED . node_decl [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## FUNCTION IMPORTED
##

Syntax Error!

main: FUNCTION SYM LPAREN RPAREN RETURNS LPAREN RPAREN TYPE
##
## Ends in an error in state: 963.
##
## decl -> FUNCTION node_decl . node_def [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## FUNCTION node_decl
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 456, spurious reduction of production option(SEMICOLON) -> 
## In state 458, spurious reduction of production option(contract_spec) -> 
## In state 772, spurious reduction of production node_decl -> ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) 
##

Syntax Error!

main: FUNCTION SYM XOR
##
## Ends in an error in state: 392.
##
## node_decl -> ident . loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

main: FUNCTION XOR
##
## Ends in an error in state: 960.
##
## decl -> FUNCTION . node_decl node_def [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## decl -> FUNCTION . IMPORTED node_decl [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## FUNCTION
##

Syntax Error!

main: NODE IMPORTED XOR
##
## Ends in an error in state: 390.
##
## decl -> NODE IMPORTED . node_decl [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE IMPORTED
##

Syntax Error!

main: NODE SYM EQUALS SYM LPARAMBRACKET RPARAMBRACKET XOR
##
## Ends in an error in state: 958.
##
## node_param_inst -> NODE ident EQUALS ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) . SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE ident EQUALS ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param)
##

Syntax Error!

main: NODE SYM EQUALS SYM XOR
##
## Ends in an error in state: 957.
##
## node_param_inst -> NODE ident EQUALS ident . tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE ident EQUALS ident
##

Syntax Error!

main: NODE SYM EQUALS XOR
##
## Ends in an error in state: 956.
##
## node_param_inst -> NODE ident EQUALS . ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE ident EQUALS
##

Syntax Error!

main: NODE SYM LPARAMBRACKET RPARAMBRACKET XOR
##
## Ends in an error in state: 405.
##
## node_decl -> ident loption(static_params) . tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## ident loption(static_params)
##

Syntax Error!

main: NODE SYM LPARAMBRACKET TYPE SYM SEMICOLON XOR
##
## Ends in an error in state: 399.
##
## option(SEMICOLON) -> SEMICOLON . [ RPARAMBRACKET ]
## tlist_tail(SEMICOLON,RPARAMBRACKET,static_param) -> static_param SEMICOLON . tlist_tail(SEMICOLON,RPARAMBRACKET,static_param) [ LPAREN ]
##
## The known suffix of the stack is as follows:
## static_param SEMICOLON
##

Syntax Error!

main: NODE SYM LPARAMBRACKET TYPE SYM XOR
##
## Ends in an error in state: 398.
##
## tlist_tail(SEMICOLON,RPARAMBRACKET,static_param) -> static_param . option(SEMICOLON) RPARAMBRACKET [ LPAREN ]
## tlist_tail(SEMICOLON,RPARAMBRACKET,static_param) -> static_param . SEMICOLON tlist_tail(SEMICOLON,RPARAMBRACKET,static_param) [ LPAREN ]
##
## The known suffix of the stack is as follows:
## static_param
##

Syntax Error!

main: NODE SYM LPARAMBRACKET TYPE XOR
##
## Ends in an error in state: 394.
##
## static_param -> TYPE . ident [ SEMICOLON RPARAMBRACKET ]
##
## The known suffix of the stack is as follows:
## TYPE
##

Syntax Error!

main: NODE SYM LPARAMBRACKET XOR
##
## Ends in an error in state: 393.
##
## tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,static_param) -> LPARAMBRACKET . tlist_tail(SEMICOLON,RPARAMBRACKET,static_param) [ LPAREN ]
## tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,static_param) -> LPARAMBRACKET . RPARAMBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## LPARAMBRACKET
##

Syntax Error!

main: NODE SYM LPAREN CONST ASSERT
##
## Ends in an error in state: 418.
##
## const_typed_idents -> boption(CONST) . typed_idents [ WHEN SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## boption(CONST)
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME RPAREN WHEN XOR
##
## Ends in an error in state: 423.
##
## const_clocked_typed_idents -> LPAREN const_typed_idents RPAREN WHEN . clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN const_typed_idents RPAREN WHEN
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME RPAREN XOR
##
## Ends in an error in state: 422.
##
## const_clocked_typed_idents -> LPAREN const_typed_idents RPAREN . WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN const_typed_idents RPAREN
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME SEMICOLON SYM COLON ASSUME RPAREN WHEN XOR
##
## Ends in an error in state: 413.
##
## const_clocked_typed_idents -> LPAREN const_typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents) WHEN . clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN const_typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents) WHEN
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME SEMICOLON SYM COLON ASSUME RPAREN XOR
##
## Ends in an error in state: 412.
##
## const_clocked_typed_idents -> LPAREN const_typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents) . WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN const_typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents)
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME SEMICOLON SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 416.
##
## option(SEMICOLON) -> SEMICOLON . [ RPAREN ]
## tlist_tail(SEMICOLON,RPAREN,const_typed_idents) -> const_typed_idents SEMICOLON . tlist_tail(SEMICOLON,RPAREN,const_typed_idents) [ WHEN ]
##
## The known suffix of the stack is as follows:
## const_typed_idents SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME SEMICOLON SYM COLON ASSUME WHEN
##
## Ends in an error in state: 415.
##
## tlist_tail(SEMICOLON,RPAREN,const_typed_idents) -> const_typed_idents . option(SEMICOLON) RPAREN [ WHEN ]
## tlist_tail(SEMICOLON,RPAREN,const_typed_idents) -> const_typed_idents . SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents) [ WHEN ]
##
## The known suffix of the stack is as follows:
## const_typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
## In state 419, spurious reduction of production const_typed_idents -> boption(CONST) typed_idents 
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 411.
##
## const_clocked_typed_idents -> LPAREN const_typed_idents SEMICOLON . tlist_tail(SEMICOLON,RPAREN,const_typed_idents) WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN const_typed_idents SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN LPAREN SYM COLON ASSUME WHEN
##
## Ends in an error in state: 410.
##
## const_clocked_typed_idents -> LPAREN const_typed_idents . RPAREN WHEN clock_expr [ SEMICOLON RPAREN ]
## const_clocked_typed_idents -> LPAREN const_typed_idents . SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents) WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN const_typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
## In state 419, spurious reduction of production const_typed_idents -> boption(CONST) typed_idents 
##

Syntax Error!

main: NODE SYM LPAREN LPAREN XOR
##
## Ends in an error in state: 408.
##
## const_clocked_typed_idents -> LPAREN . const_typed_idents RPAREN WHEN clock_expr [ SEMICOLON RPAREN ]
## const_clocked_typed_idents -> LPAREN . const_typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_typed_idents) WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN SYM COLON ASSUME RPAREN WHEN XOR
##
## Ends in an error in state: 445.
##
## clocked_typed_idents -> LPAREN typed_idents RPAREN WHEN . clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN typed_idents RPAREN WHEN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN SYM COLON ASSUME RPAREN XOR
##
## Ends in an error in state: 444.
##
## clocked_typed_idents -> LPAREN typed_idents RPAREN . WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN typed_idents RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN SYM COLON ASSUME SEMICOLON SYM COLON ASSUME RPAREN WHEN XOR
##
## Ends in an error in state: 442.
##
## clocked_typed_idents -> LPAREN typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents) WHEN . clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents) WHEN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN SYM COLON ASSUME SEMICOLON SYM COLON ASSUME RPAREN XOR
##
## Ends in an error in state: 441.
##
## clocked_typed_idents -> LPAREN typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents) . WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 440.
##
## clocked_typed_idents -> LPAREN typed_idents SEMICOLON . tlist_tail(SEMICOLON,RPAREN,typed_idents) WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN typed_idents SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN SYM COLON ASSUME WHEN
##
## Ends in an error in state: 439.
##
## clocked_typed_idents -> LPAREN typed_idents . RPAREN WHEN clock_expr [ SEMICOLON RPAREN ]
## clocked_typed_idents -> LPAREN typed_idents . SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents) WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN LPAREN XOR
##
## Ends in an error in state: 438.
##
## clocked_typed_idents -> LPAREN . typed_idents RPAREN WHEN clock_expr [ SEMICOLON RPAREN ]
## clocked_typed_idents -> LPAREN . typed_idents SEMICOLON tlist_tail(SEMICOLON,RPAREN,typed_idents) WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONST ASSUME EQUALS ASSUME SEMICOLON TYPE
##
## Ends in an error in state: 802.
##
## list(node_local_decl) -> node_local_decl . list(node_local_decl) [ LET ]
##
## The known suffix of the stack is as follows:
## node_local_decl
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 799, spurious reduction of production nonempty_list(const_decl_body) -> const_decl_body 
## In state 786, spurious reduction of production const_decl -> CONST nonempty_list(const_decl_body) 
## In state 804, spurious reduction of production node_local_decl -> const_decl 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_PSATBLOCK GUARANTEE TRUE SEMICOLON TEL
##
## Ends in an error in state: 770.
##
## contract_spec -> CONTRACT_PSATBLOCK contract_in_block . PSBLOCKEND [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT_PSATBLOCK contract_in_block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 760, spurious reduction of production nonempty_list(contract_item) -> contract_item 
## In state 758, spurious reduction of production contract_in_block -> nonempty_list(contract_item) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_PSATBLOCK XOR
##
## Ends in an error in state: 769.
##
## contract_spec -> CONTRACT_PSATBLOCK . contract_in_block PSBLOCKEND [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT_PSATBLOCK
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK ASSUME STRING ASSERT
##
## Ends in an error in state: 755.
##
## contract_assume -> ASSUME option(STRING) . pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ASSUME option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK ASSUME TRUE WITH
##
## Ends in an error in state: 756.
##
## contract_assume -> ASSUME option(STRING) pexpr(quantified) . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ASSUME option(STRING) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK ASSUME XOR
##
## Ends in an error in state: 754.
##
## contract_assume -> ASSUME . option(STRING) pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## ASSUME
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM COLON UINT8 EQUALS TRUE WITH
##
## Ends in an error in state: 752.
##
## contract_ghost_const -> CONST ident COLON lustre_type EQUALS pexpr(quantified) . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON lustre_type EQUALS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM COLON UINT8 EQUALS XOR
##
## Ends in an error in state: 751.
##
## contract_ghost_const -> CONST ident COLON lustre_type EQUALS . pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON lustre_type EQUALS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM COLON UINT8 XOR
##
## Ends in an error in state: 750.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ EQUALS CARET ]
## contract_ghost_const -> CONST ident COLON lustre_type . EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON lustre_type
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM COLON XOR
##
## Ends in an error in state: 749.
##
## contract_ghost_const -> CONST ident COLON . lustre_type EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM EQUALS TRUE WITH
##
## Ends in an error in state: 747.
##
## contract_ghost_const -> CONST ident EQUALS pexpr(quantified) . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONST ident EQUALS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM EQUALS XOR
##
## Ends in an error in state: 746.
##
## contract_ghost_const -> CONST ident EQUALS . pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## CONST ident EQUALS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST SYM XOR
##
## Ends in an error in state: 745.
##
## contract_ghost_const -> CONST ident . COLON lustre_type EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## contract_ghost_const -> CONST ident . EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## CONST ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK CONST XOR
##
## Ends in an error in state: 744.
##
## contract_ghost_const -> CONST . ident COLON lustre_type EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## contract_ghost_const -> CONST . ident EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## CONST
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK GUARANTEE ASSUME SEMICOLON TEL
##
## Ends in an error in state: 767.
##
## contract_spec -> CONTRACT_SSATBLOCK contract_in_block . SSBLOCKEND [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT_SSATBLOCK contract_in_block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 760, spurious reduction of production nonempty_list(contract_item) -> contract_item 
## In state 758, spurious reduction of production contract_in_block -> nonempty_list(contract_item) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK GUARANTEE ASSUME SEMICOLON XOR
##
## Ends in an error in state: 760.
##
## nonempty_list(contract_item) -> contract_item . [ TEL SSBLOCKEND PSBLOCKEND ]
## nonempty_list(contract_item) -> contract_item . nonempty_list(contract_item) [ TEL SSBLOCKEND PSBLOCKEND ]
##
## The known suffix of the stack is as follows:
## contract_item
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK GUARANTEE STRING ASSERT
##
## Ends in an error in state: 741.
##
## contract_guarantee -> GUARANTEE option(STRING) . pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## GUARANTEE option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK GUARANTEE TRUE WITH
##
## Ends in an error in state: 742.
##
## contract_guarantee -> GUARANTEE option(STRING) pexpr(quantified) . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## GUARANTEE option(STRING) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK GUARANTEE XOR
##
## Ends in an error in state: 740.
##
## contract_guarantee -> GUARANTEE . option(STRING) pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## GUARANTEE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN RPAREN RETURNS LPAREN RPAREN XOR
##
## Ends in an error in state: 738.
##
## contract_import -> IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN RPAREN RETURNS LPAREN XOR
##
## Ends in an error in state: 736.
##
## contract_import -> IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN . loption(separated_nonempty_list(COMMA,qexpr)) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN RPAREN RETURNS XOR
##
## Ends in an error in state: 735.
##
## contract_import -> IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS . LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN RPAREN XOR
##
## Ends in an error in state: 734.
##
## contract_import -> IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN . RETURNS LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 731.
##
## separated_nonempty_list(COMMA,qexpr) -> pexpr(quantified) COMMA . separated_nonempty_list(COMMA,qexpr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN TRUE WITH
##
## Ends in an error in state: 730.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## separated_nonempty_list(COMMA,qexpr) -> pexpr(quantified) . [ RPAREN ]
## separated_nonempty_list(COMMA,qexpr) -> pexpr(quantified) . COMMA separated_nonempty_list(COMMA,qexpr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM LPAREN XOR
##
## Ends in an error in state: 728.
##
## contract_import -> IMPORTCONTRACT ident LPAREN . loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT ident LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT SYM XOR
##
## Ends in an error in state: 727.
##
## contract_import -> IMPORTCONTRACT ident . LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK IMPORTCONTRACT XOR
##
## Ends in an error in state: 726.
##
## contract_import -> IMPORTCONTRACT . ident LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN RETURNS LPAREN loption(separated_nonempty_list(COMMA,qexpr)) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## IMPORTCONTRACT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN ENSURE ASSUME SEMICOLON XOR
##
## Ends in an error in state: 722.
##
## list(contract_ensure) -> contract_ensure . list(contract_ensure) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## contract_ensure
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN ENSURE STRING ASSERT
##
## Ends in an error in state: 716.
##
## contract_ensure -> ENSURE option(STRING) . pexpr(quantified) SEMICOLON [ RPAREN ENSURE ]
##
## The known suffix of the stack is as follows:
## ENSURE option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN ENSURE TRUE WITH
##
## Ends in an error in state: 717.
##
## contract_ensure -> ENSURE option(STRING) pexpr(quantified) . SEMICOLON [ RPAREN ENSURE ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ENSURE option(STRING) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN ENSURE XOR
##
## Ends in an error in state: 715.
##
## contract_ensure -> ENSURE . option(STRING) pexpr(quantified) SEMICOLON [ RPAREN ENSURE ]
##
## The known suffix of the stack is as follows:
## ENSURE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN REQUIRE ASSUME SEMICOLON XOR
##
## Ends in an error in state: 724.
##
## list(contract_require) -> contract_require . list(contract_require) [ RPAREN ENSURE ]
##
## The known suffix of the stack is as follows:
## contract_require
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN REQUIRE STRING ASSERT
##
## Ends in an error in state: 711.
##
## contract_require -> REQUIRE option(STRING) . pexpr(quantified) SEMICOLON [ RPAREN REQUIRE ENSURE ]
##
## The known suffix of the stack is as follows:
## REQUIRE option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN REQUIRE TRUE WITH
##
## Ends in an error in state: 712.
##
## contract_require -> REQUIRE option(STRING) pexpr(quantified) . SEMICOLON [ RPAREN REQUIRE ENSURE ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## REQUIRE option(STRING) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN REQUIRE XOR
##
## Ends in an error in state: 709.
##
## contract_require -> REQUIRE . option(STRING) pexpr(quantified) SEMICOLON [ RPAREN REQUIRE ENSURE ]
##
## The known suffix of the stack is as follows:
## REQUIRE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN RPAREN XOR
##
## Ends in an error in state: 720.
##
## mode_equation -> MODE ident LPAREN list(contract_require) list(contract_ensure) RPAREN . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## MODE ident LPAREN list(contract_require) list(contract_ensure) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM LPAREN XOR
##
## Ends in an error in state: 708.
##
## mode_equation -> MODE ident LPAREN . list(contract_require) list(contract_ensure) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## MODE ident LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE SYM XOR
##
## Ends in an error in state: 707.
##
## mode_equation -> MODE ident . LPAREN list(contract_require) list(contract_ensure) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## MODE ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK MODE XOR
##
## Ends in an error in state: 706.
##
## mode_equation -> MODE . ident LPAREN list(contract_require) list(contract_ensure) RPAREN SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## MODE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK VAR SYM COLON UINT8 EQUALS TRUE WITH
##
## Ends in an error in state: 704.
##
## contract_ghost_var -> VAR ident COLON lustre_type EQUALS pexpr(quantified) . SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## VAR ident COLON lustre_type EQUALS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK VAR SYM COLON UINT8 EQUALS XOR
##
## Ends in an error in state: 464.
##
## contract_ghost_var -> VAR ident COLON lustre_type EQUALS . pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## VAR ident COLON lustre_type EQUALS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK VAR SYM COLON UINT8 XOR
##
## Ends in an error in state: 463.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ EQUALS CARET ]
## contract_ghost_var -> VAR ident COLON lustre_type . EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## VAR ident COLON lustre_type
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK VAR SYM COLON XOR
##
## Ends in an error in state: 462.
##
## contract_ghost_var -> VAR ident COLON . lustre_type EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## VAR ident COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK VAR SYM XOR
##
## Ends in an error in state: 461.
##
## contract_ghost_var -> VAR ident . COLON lustre_type EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## VAR ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK VAR XOR
##
## Ends in an error in state: 460.
##
## contract_ghost_var -> VAR . ident COLON lustre_type EQUALS pexpr(quantified) SEMICOLON [ VAR TEL SSBLOCKEND PSBLOCKEND MODE IMPORTCONTRACT GUARANTEE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## VAR
##

Syntax Error! Unexpected delimiter found, perhaps an added semicolon.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN CONTRACT_SSATBLOCK XOR
##
## Ends in an error in state: 459.
##
## contract_spec -> CONTRACT_SSATBLOCK . contract_in_block SSBLOCKEND [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## CONTRACT_SSATBLOCK
##

Syntax Error! Unexpected delimiter found, perhaps an added semicolon.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT BVNOT TRUE VAR
##
## Ends in an error in state: 521.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> BVNOT pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## BVNOT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT BVNOT XOR
##
## Ends in an error in state: 518.
##
## pexpr(quantified) -> BVNOT . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## BVNOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT COLON COLON XOR
##
## Ends in an error in state: 519.
##
## pexpr(quantified) -> two_colons . separated_nonempty_list(two_colons,ident) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## two_colons
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN RPAREN COMMA TRUE RSQBRACKET
##
## Ends in an error in state: 598.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 597, spurious reduction of production pexpr_list(quantified) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN RPAREN COMMA XOR
##
## Ends in an error in state: 596.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA . pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN RPAREN XOR
##
## Ends in an error in state: 594.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN . COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 593.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 588.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 587.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY TRUE WITH
##
## Ends in an error in state: 586.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM EVERY XOR
##
## Ends in an error in state: 585.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART SYM XOR
##
## Ends in an error in state: 584.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN RESTART XOR
##
## Ends in an error in state: 583.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART . ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART . ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN RESTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA LPAREN XOR
##
## Ends in an error in state: 582.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN . RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA LPAREN . RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA SYM LPAREN RPAREN COMMA TRUE RSQBRACKET
##
## Ends in an error in state: 606.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 597, spurious reduction of production pexpr_list(quantified) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA SYM LPAREN RPAREN COMMA XOR
##
## Ends in an error in state: 605.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA . pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA SYM LPAREN RPAREN XOR
##
## Ends in an error in state: 603.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN . COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA SYM LPAREN TRUE RESTART
##
## Ends in an error in state: 602.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA SYM LPAREN XOR
##
## Ends in an error in state: 601.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA ident LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA SYM XOR
##
## Ends in an error in state: 600.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA ident . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 581.
##
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA . ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA . ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA . LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) COMMA . LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified) COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN TRUE WITH
##
## Ends in an error in state: 534.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) . COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) . COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) . COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN pexpr(quantified) . COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT LPAREN XOR
##
## Ends in an error in state: 517.
##
## pexpr(quantified) -> CONDACT LPAREN . pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN . pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN . pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT LPAREN . pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CONDACT XOR
##
## Ends in an error in state: 516.
##
## pexpr(quantified) -> CONDACT . LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT . LPAREN pexpr(quantified) COMMA ident LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT . LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CONDACT . LPAREN pexpr(quantified) COMMA LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CONDACT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CURRENT TRUE WHEN
##
## Ends in an error in state: 608.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> CURRENT pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CURRENT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT CURRENT XOR
##
## Ends in an error in state: 515.
##
## pexpr(quantified) -> CURRENT . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CURRENT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT EXISTS LPAREN RPAREN TRUE VAR
##
## Ends in an error in state: 609.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT EXISTS LPAREN RPAREN XOR
##
## Ends in an error in state: 513.
##
## pexpr(quantified) -> EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## EXISTS tlist(LPAREN,SEMICOLON,RPAREN,typed_idents)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT EXISTS XOR
##
## Ends in an error in state: 512.
##
## pexpr(quantified) -> EXISTS . tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## EXISTS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY LPAREN TRUE COMMA NUMERAL COMMA TRUE WITH
##
## Ends in an error in state: 614.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> FBY LPAREN pexpr(quantified) COMMA NUMERAL COMMA pexpr(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(quantified) COMMA NUMERAL COMMA pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY LPAREN TRUE COMMA NUMERAL COMMA XOR
##
## Ends in an error in state: 613.
##
## pexpr(quantified) -> FBY LPAREN pexpr(quantified) COMMA NUMERAL COMMA . pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(quantified) COMMA NUMERAL COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY LPAREN TRUE COMMA NUMERAL XOR
##
## Ends in an error in state: 612.
##
## pexpr(quantified) -> FBY LPAREN pexpr(quantified) COMMA NUMERAL . COMMA pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(quantified) COMMA NUMERAL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 611.
##
## pexpr(quantified) -> FBY LPAREN pexpr(quantified) COMMA . NUMERAL COMMA pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(quantified) COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY LPAREN TRUE WITH
##
## Ends in an error in state: 610.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> FBY LPAREN pexpr(quantified) . COMMA NUMERAL COMMA pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY LPAREN XOR
##
## Ends in an error in state: 510.
##
## pexpr(quantified) -> FBY LPAREN . pexpr(quantified) COMMA NUMERAL COMMA pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FBY XOR
##
## Ends in an error in state: 509.
##
## pexpr(quantified) -> FBY . LPAREN pexpr(quantified) COMMA NUMERAL COMMA pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FBY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FORALL LPAREN RPAREN TRUE VAR
##
## Ends in an error in state: 616.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FORALL LPAREN RPAREN XOR
##
## Ends in an error in state: 508.
##
## pexpr(quantified) -> FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FORALL tlist(LPAREN,SEMICOLON,RPAREN,typed_idents)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT FORALL XOR
##
## Ends in an error in state: 507.
##
## pexpr(quantified) -> FORALL . tlist(LPAREN,SEMICOLON,RPAREN,typed_idents) pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## FORALL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT HASH LPAREN TRUE RSQBRACKET
##
## Ends in an error in state: 617.
##
## pexpr(quantified) -> HASH LPAREN pexpr_list(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## HASH LPAREN pexpr_list(quantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 597, spurious reduction of production pexpr_list(quantified) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT HASH LPAREN XOR
##
## Ends in an error in state: 506.
##
## pexpr(quantified) -> HASH LPAREN . pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## HASH LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT HASH XOR
##
## Ends in an error in state: 505.
##
## pexpr(quantified) -> HASH . LPAREN pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## HASH
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT IF TRUE THEN TRUE ELSE TRUE VAR
##
## Ends in an error in state: 623.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> IF pexpr(quantified) THEN pexpr(quantified) ELSE pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(quantified) THEN pexpr(quantified) ELSE pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT IF TRUE THEN TRUE ELSE XOR
##
## Ends in an error in state: 622.
##
## pexpr(quantified) -> IF pexpr(quantified) THEN pexpr(quantified) ELSE . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(quantified) THEN pexpr(quantified) ELSE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT IF TRUE THEN TRUE WITH
##
## Ends in an error in state: 621.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> IF pexpr(quantified) THEN pexpr(quantified) . ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(quantified) THEN pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT IF TRUE THEN XOR
##
## Ends in an error in state: 620.
##
## pexpr(quantified) -> IF pexpr(quantified) THEN . pexpr(quantified) ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(quantified) THEN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT IF TRUE WITH
##
## Ends in an error in state: 619.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> IF pexpr(quantified) . THEN pexpr(quantified) ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT IF XOR
##
## Ends in an error in state: 504.
##
## pexpr(quantified) -> IF . pexpr(quantified) THEN pexpr(quantified) ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT TRUE VAR
##
## Ends in an error in state: 503.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> INT pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT XOR
##
## Ends in an error in state: 502.
##
## pexpr(quantified) -> INT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT16 TRUE VAR
##
## Ends in an error in state: 501.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> INT16 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT16 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT16 XOR
##
## Ends in an error in state: 500.
##
## pexpr(quantified) -> INT16 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT16
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT32 TRUE VAR
##
## Ends in an error in state: 499.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> INT32 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT32 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT32 XOR
##
## Ends in an error in state: 498.
##
## pexpr(quantified) -> INT32 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT32
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT64 TRUE VAR
##
## Ends in an error in state: 497.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> INT64 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT64 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT64 XOR
##
## Ends in an error in state: 496.
##
## pexpr(quantified) -> INT64 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT64
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT8 TRUE VAR
##
## Ends in an error in state: 495.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> INT8 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT8 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT INT8 XOR
##
## Ends in an error in state: 494.
##
## pexpr(quantified) -> INT8 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## INT8
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LAST XOR
##
## Ends in an error in state: 492.
##
## pexpr(quantified) -> LAST . ident_or_quotident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LAST
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LCURLYBRACKET TRUE RSQBRACKET
##
## Ends in an error in state: 624.
##
## pexpr(quantified) -> LCURLYBRACKET pexpr_list(quantified) . RCURLYBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LCURLYBRACKET pexpr_list(quantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 597, spurious reduction of production pexpr_list(quantified) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LCURLYBRACKET XOR
##
## Ends in an error in state: 491.
##
## pexpr(quantified) -> LCURLYBRACKET . pexpr_list(quantified) RCURLYBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LCURLYBRACKET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 649.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT RPAREN LPAREN XOR
##
## Ends in an error in state: 648.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT RPAREN XOR
##
## Ends in an error in state: 647.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT TRUE RESTART
##
## Ends in an error in state: 646.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL DEFAULT XOR
##
## Ends in an error in state: 645.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE INITIAL XOR
##
## Ends in an error in state: 644.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL . DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 642.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 641.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 640.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY TRUE WITH
##
## Ends in an error in state: 639.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) . INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN EVERY XOR
##
## Ends in an error in state: 638.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY . pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 637.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN . EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY TRUE WITH
##
## Ends in an error in state: 636.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) . RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) . RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM EVERY XOR
##
## Ends in an error in state: 635.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY . pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident EVERY . pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART SYM XOR
##
## Ends in an error in state: 634.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident . EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART ident . EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN RESTART XOR
##
## Ends in an error in state: 633.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART . ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN RESTART . ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN RESTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE LPAREN XOR
##
## Ends in an error in state: 632.
##
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN . RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE LPAREN . RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 677.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 676.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 675.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY TRUE WITH
##
## Ends in an error in state: 674.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART EVERY XOR
##
## Ends in an error in state: 673.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RESTART XOR
##
## Ends in an error in state: 672.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 670.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RPAREN LPAREN XOR
##
## Ends in an error in state: 669.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT RPAREN XOR
##
## Ends in an error in state: 668.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT TRUE RCURLYBRACKET
##
## Ends in an error in state: 667.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL DEFAULT XOR
##
## Ends in an error in state: 666.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE INITIAL XOR
##
## Ends in an error in state: 665.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL . DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL . DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) INITIAL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 663.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 662.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 661.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY TRUE WITH
##
## Ends in an error in state: 660.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RESTART EVERY XOR
##
## Ends in an error in state: 659.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RESTART XOR
##
## Ends in an error in state: 658.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RESTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 656.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 655.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 654.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY TRUE WITH
##
## Ends in an error in state: 653.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) . INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) . INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY pexpr(quantified) . RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM EVERY XOR
##
## Ends in an error in state: 652.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY . pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY . pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident EVERY . pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE SYM XOR
##
## Ends in an error in state: 651.
##
## pexpr(quantified) -> LPAREN ACTIVATE ident . EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident . EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE ident . EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN ACTIVATE XOR
##
## Ends in an error in state: 631.
##
## pexpr(quantified) -> LPAREN ACTIVATE . ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE . ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE . LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE . ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE . LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN ACTIVATE . ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN ACTIVATE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN TRUE RESTART
##
## Ends in an error in state: 629.
##
## pexpr(quantified) -> LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified)))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 589, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr(quantified))) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART SYM EVERY TRUE RPAREN LPAREN XOR
##
## Ends in an error in state: 628.
##
## pexpr(quantified) -> LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(quantified) RPAREN LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART SYM EVERY TRUE RPAREN XOR
##
## Ends in an error in state: 627.
##
## pexpr(quantified) -> LPAREN RESTART ident EVERY pexpr(quantified) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(quantified) RPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART SYM EVERY TRUE WITH
##
## Ends in an error in state: 626.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN RESTART ident EVERY pexpr(quantified) . RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART SYM EVERY XOR
##
## Ends in an error in state: 490.
##
## pexpr(quantified) -> LPAREN RESTART ident EVERY . pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident EVERY
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART SYM XOR
##
## Ends in an error in state: 489.
##
## pexpr(quantified) -> LPAREN RESTART ident . EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN RESTART XOR
##
## Ends in an error in state: 488.
##
## pexpr(quantified) -> LPAREN RESTART . ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN RESTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN TRUE COMMA TRUE RSQBRACKET
##
## Ends in an error in state: 687.
##
## pexpr(quantified) -> LPAREN pexpr(quantified) COMMA pexpr_list(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(quantified) COMMA pexpr_list(quantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 597, spurious reduction of production pexpr_list(quantified) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN TRUE COMMA XOR
##
## Ends in an error in state: 686.
##
## pexpr(quantified) -> LPAREN pexpr(quantified) COMMA . pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(quantified) COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN TRUE VAR
##
## Ends in an error in state: 679.
##
## pexpr(quantified) -> LPAREN pexpr(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN pexpr(quantified) . COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN pexpr(quantified) . WITH nonempty_list(label_or_index) EQUALS pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN TRUE WITH DOTPERCENT ASSUME EQUALS TRUE WITH
##
## Ends in an error in state: 683.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN pexpr(quantified) WITH nonempty_list(label_or_index) EQUALS pexpr(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(quantified) WITH nonempty_list(label_or_index) EQUALS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN TRUE WITH DOTPERCENT ASSUME EQUALS XOR
##
## Ends in an error in state: 682.
##
## pexpr(quantified) -> LPAREN pexpr(quantified) WITH nonempty_list(label_or_index) EQUALS . pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(quantified) WITH nonempty_list(label_or_index) EQUALS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN TRUE WITH XOR
##
## Ends in an error in state: 680.
##
## pexpr(quantified) -> LPAREN pexpr(quantified) WITH . nonempty_list(label_or_index) EQUALS pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr(quantified) WITH
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LPAREN XOR
##
## Ends in an error in state: 487.
##
## pexpr(quantified) -> LPAREN . pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . pexpr(quantified) COMMA pexpr_list(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . pexpr(quantified) WITH nonempty_list(label_or_index) EQUALS pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . ACTIVATE ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . ACTIVATE ident EVERY pexpr(quantified) INITIAL DEFAULT loption(separated_nonempty_list(COMMA,pexpr(quantified))) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . ACTIVATE LPAREN RESTART ident EVERY pexpr(quantified) RPAREN EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . ACTIVATE ident EVERY pexpr(quantified) RESTART EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> LPAREN . RESTART ident EVERY pexpr(quantified) RPAREN LPAREN loption(separated_nonempty_list(COMMA,pexpr(quantified))) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LSQBRACKET TRUE COMMA XOR
##
## Ends in an error in state: 591.
##
## separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) COMMA . separated_nonempty_list(COMMA,pexpr(quantified)) [ RSQBRACKET RPAREN RESTART RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LSQBRACKET TRUE RPAREN
##
## Ends in an error in state: 689.
##
## pexpr(quantified) -> LSQBRACKET pexpr_list(quantified) . RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET pexpr_list(quantified)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 590, spurious reduction of production separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) 
## In state 597, spurious reduction of production pexpr_list(quantified) -> separated_nonempty_list(COMMA,pexpr(quantified)) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LSQBRACKET TRUE WITH
##
## Ends in an error in state: 590.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) . [ RSQBRACKET RPAREN RESTART RCURLYBRACKET ]
## separated_nonempty_list(COMMA,pexpr(quantified)) -> pexpr(quantified) . COMMA separated_nonempty_list(COMMA,pexpr(quantified)) [ RSQBRACKET RPAREN RESTART RCURLYBRACKET ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT LSQBRACKET XOR
##
## Ends in an error in state: 486.
##
## pexpr(quantified) -> LSQBRACKET . pexpr_list(quantified) RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE LPAREN SYM SEMICOLON TRUE SEMICOLON TRUE WITH
##
## Ends in an error in state: 693.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> MERGE LPAREN ident SEMICOLON pexpr(quantified) SEMICOLON pexpr(quantified) . RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH RPAREN PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON pexpr(quantified) SEMICOLON pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE LPAREN SYM SEMICOLON TRUE SEMICOLON XOR
##
## Ends in an error in state: 692.
##
## pexpr(quantified) -> MERGE LPAREN ident SEMICOLON pexpr(quantified) SEMICOLON . pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON pexpr(quantified) SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE LPAREN SYM SEMICOLON TRUE WITH
##
## Ends in an error in state: 691.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> MERGE LPAREN ident SEMICOLON pexpr(quantified) . SEMICOLON pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE LPAREN SYM SEMICOLON XOR
##
## Ends in an error in state: 485.
##
## pexpr(quantified) -> MERGE LPAREN ident SEMICOLON . pexpr(quantified) SEMICOLON pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE LPAREN SYM XOR
##
## Ends in an error in state: 484.
##
## pexpr(quantified) -> MERGE LPAREN ident . SEMICOLON pexpr(quantified) SEMICOLON pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE LPAREN XOR
##
## Ends in an error in state: 483.
##
## pexpr(quantified) -> MERGE LPAREN . ident SEMICOLON pexpr(quantified) SEMICOLON pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE SYM XOR
##
## Ends in an error in state: 695.
##
## pexpr(quantified) -> MERGE ident . nonempty_list(merge_case) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MERGE XOR
##
## Ends in an error in state: 482.
##
## pexpr(quantified) -> MERGE . LPAREN ident SEMICOLON pexpr(quantified) SEMICOLON pexpr(quantified) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> MERGE . ident nonempty_list(merge_case) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MERGE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MINUS TRUE VAR
##
## Ends in an error in state: 481.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> MINUS pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MINUS pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT MINUS XOR
##
## Ends in an error in state: 480.
##
## pexpr(quantified) -> MINUS . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT NOT TRUE VAR
##
## Ends in an error in state: 697.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> NOT pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT NOT XOR
##
## Ends in an error in state: 479.
##
## pexpr(quantified) -> NOT . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## NOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT PRE TRUE VAR
##
## Ends in an error in state: 698.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> PRE pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## PRE pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT PRE XOR
##
## Ends in an error in state: 477.
##
## pexpr(quantified) -> PRE . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## PRE
##

Syntax Error! Perhaps a missing argument to `pre`

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT REAL TRUE VAR
##
## Ends in an error in state: 476.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> REAL pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## REAL pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT REAL XOR
##
## Ends in an error in state: 475.
##
## pexpr(quantified) -> REAL . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## REAL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT SYM VAR
##
## Ends in an error in state: 532.
##
## node_call -> ident . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## node_call -> ident . tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> ident . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> ident . tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,record_field_assign) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error! Expected a delimiter, perhaps a missing semicolon.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE AND TRUE VAR
##
## Ends in an error in state: 570.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) AND pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) AND pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE AND XOR
##
## Ends in an error in state: 569.
##
## pexpr(quantified) -> pexpr(quantified) AND . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) AND
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE ARROW TRUE VAR
##
## Ends in an error in state: 580.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) ARROW pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) ARROW pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE ARROW XOR
##
## Ends in an error in state: 579.
##
## pexpr(quantified) -> pexpr(quantified) ARROW . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) ARROW
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE BVAND TRUE VAR
##
## Ends in an error in state: 548.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) BVAND pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) BVAND pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE BVAND XOR
##
## Ends in an error in state: 547.
##
## pexpr(quantified) -> pexpr(quantified) BVAND . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) BVAND
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE BVOR TRUE VAR
##
## Ends in an error in state: 546.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) BVOR pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) BVOR pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE BVOR XOR
##
## Ends in an error in state: 545.
##
## pexpr(quantified) -> pexpr(quantified) BVOR . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) BVOR
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE CARET TRUE VAR
##
## Ends in an error in state: 530.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) CARET pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) CARET pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE CARET XOR
##
## Ends in an error in state: 529.
##
## pexpr(quantified) -> pexpr(quantified) CARET . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) CARET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE DIV TRUE VAR
##
## Ends in an error in state: 554.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) DIV pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) DIV pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE DIV XOR
##
## Ends in an error in state: 553.
##
## pexpr(quantified) -> pexpr(quantified) DIV . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) DIV
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE DOT XOR
##
## Ends in an error in state: 527.
##
## pexpr(quantified) -> pexpr(quantified) DOT . ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) DOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE DOTPERCENT XOR
##
## Ends in an error in state: 525.
##
## pexpr(quantified) -> pexpr(quantified) DOTPERCENT . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) DOTPERCENT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE EQUALS TRUE VAR
##
## Ends in an error in state: 568.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) EQUALS pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) EQUALS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE EQUALS XOR
##
## Ends in an error in state: 567.
##
## pexpr(quantified) -> pexpr(quantified) EQUALS . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) EQUALS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE GT TRUE VAR
##
## Ends in an error in state: 566.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) GT pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) GT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE GT XOR
##
## Ends in an error in state: 565.
##
## pexpr(quantified) -> pexpr(quantified) GT . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) GT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE GTE TRUE VAR
##
## Ends in an error in state: 564.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) GTE pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) GTE pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE GTE XOR
##
## Ends in an error in state: 563.
##
## pexpr(quantified) -> pexpr(quantified) GTE . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) GTE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE IMPL TRUE VAR
##
## Ends in an error in state: 578.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) IMPL pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) IMPL pexpr(quantified)
##

Syntax Error! Perhaps a missing delimiter such as a semicolon at the end of the statement.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE IMPL XOR
##
## Ends in an error in state: 577.
##
## pexpr(quantified) -> pexpr(quantified) IMPL . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) IMPL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE INTDIV TRUE VAR
##
## Ends in an error in state: 552.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) INTDIV pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) INTDIV pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE INTDIV XOR
##
## Ends in an error in state: 551.
##
## pexpr(quantified) -> pexpr(quantified) INTDIV . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) INTDIV
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LSH TRUE VAR
##
## Ends in an error in state: 544.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) LSH pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LSH pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LSH XOR
##
## Ends in an error in state: 543.
##
## pexpr(quantified) -> pexpr(quantified) LSH . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LSH
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LSQBRACKET XOR
##
## Ends in an error in state: 522.
##
## pexpr(quantified) -> pexpr(quantified) LSQBRACKET . array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LSQBRACKET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LT TRUE VAR
##
## Ends in an error in state: 562.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) LT pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LT XOR
##
## Ends in an error in state: 561.
##
## pexpr(quantified) -> pexpr(quantified) LT . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LTE TRUE VAR
##
## Ends in an error in state: 560.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) LTE pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LTE pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE LTE XOR
##
## Ends in an error in state: 559.
##
## pexpr(quantified) -> pexpr(quantified) LTE . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) LTE
##

Syntax Error! Perhaps an invalid symbol in expression.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE MINUS TRUE VAR
##
## Ends in an error in state: 558.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) MINUS pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) MINUS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE MINUS XOR
##
## Ends in an error in state: 557.
##
## pexpr(quantified) -> pexpr(quantified) MINUS . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) MINUS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE MOD TRUE VAR
##
## Ends in an error in state: 550.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) MOD pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) MOD pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE MOD XOR
##
## Ends in an error in state: 549.
##
## pexpr(quantified) -> pexpr(quantified) MOD . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) MOD
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE MULT TRUE VAR
##
## Ends in an error in state: 542.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) MULT pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) MULT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE MULT XOR
##
## Ends in an error in state: 541.
##
## pexpr(quantified) -> pexpr(quantified) MULT . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) MULT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE NEQ TRUE VAR
##
## Ends in an error in state: 556.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) NEQ pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) NEQ pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE NEQ XOR
##
## Ends in an error in state: 555.
##
## pexpr(quantified) -> pexpr(quantified) NEQ . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) NEQ
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE OR TRUE VAR
##
## Ends in an error in state: 576.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) OR pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) OR pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE OR XOR
##
## Ends in an error in state: 575.
##
## pexpr(quantified) -> pexpr(quantified) OR . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) OR
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE PIPE TRUE VAR
##
## Ends in an error in state: 574.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) PIPE pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) PIPE pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE PIPE XOR
##
## Ends in an error in state: 573.
##
## pexpr(quantified) -> pexpr(quantified) PIPE . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) PIPE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE PLUS TRUE VAR
##
## Ends in an error in state: 540.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) PLUS pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) PLUS pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE PLUS XOR
##
## Ends in an error in state: 539.
##
## pexpr(quantified) -> pexpr(quantified) PLUS . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) PLUS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE RSH TRUE VAR
##
## Ends in an error in state: 538.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) RSH pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) RSH pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE RSH XOR
##
## Ends in an error in state: 537.
##
## pexpr(quantified) -> pexpr(quantified) RSH . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) RSH
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE WHEN XOR
##
## Ends in an error in state: 571.
##
## pexpr(quantified) -> pexpr(quantified) WHEN . clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) WHEN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE WITH
##
## Ends in an error in state: 920.
##
## node_equation -> ASSERT pexpr(quantified) . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ASSERT pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE XOR TRUE VAR
##
## Ends in an error in state: 536.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) XOR pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) XOR pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT TRUE XOR XOR
##
## Ends in an error in state: 535.
##
## pexpr(quantified) -> pexpr(quantified) XOR . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## pexpr(quantified) XOR
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT16 TRUE VAR
##
## Ends in an error in state: 473.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> UINT16 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT16 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT16 XOR
##
## Ends in an error in state: 472.
##
## pexpr(quantified) -> UINT16 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT16
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT32 TRUE VAR
##
## Ends in an error in state: 471.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> UINT32 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT32 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT32 XOR
##
## Ends in an error in state: 470.
##
## pexpr(quantified) -> UINT32 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT32
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT64 TRUE VAR
##
## Ends in an error in state: 469.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> UINT64 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT64 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT64 XOR
##
## Ends in an error in state: 468.
##
## pexpr(quantified) -> UINT64 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT64
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT8 TRUE VAR
##
## Ends in an error in state: 467.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> UINT8 pexpr(nonquantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT8 pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT UINT8 XOR
##
## Ends in an error in state: 466.
##
## pexpr(quantified) -> UINT8 . pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## UINT8
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT WITH TRUE THEN TRUE ELSE TRUE VAR
##
## Ends in an error in state: 703.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> WITH pexpr(quantified) THEN pexpr(quantified) ELSE pexpr(quantified) . [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(quantified) THEN pexpr(quantified) ELSE pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT WITH TRUE THEN TRUE ELSE XOR
##
## Ends in an error in state: 702.
##
## pexpr(quantified) -> WITH pexpr(quantified) THEN pexpr(quantified) ELSE . pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(quantified) THEN pexpr(quantified) ELSE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT WITH TRUE THEN TRUE WITH
##
## Ends in an error in state: 701.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> WITH pexpr(quantified) THEN pexpr(quantified) . ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(quantified) THEN pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT WITH TRUE THEN XOR
##
## Ends in an error in state: 700.
##
## pexpr(quantified) -> WITH pexpr(quantified) THEN . pexpr(quantified) ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(quantified) THEN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT WITH TRUE WITH
##
## Ends in an error in state: 699.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> WITH pexpr(quantified) . THEN pexpr(quantified) ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN THEN RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT WITH XOR
##
## Ends in an error in state: 465.
##
## pexpr(quantified) -> WITH . pexpr(quantified) THEN pexpr(quantified) ELSE pexpr(quantified) [ XOR WITH WHEN THEN SEMICOLON RSQBRACKET RSH RPAREN RESTART RCURLYBRACKET PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV INITIAL IMPL GTE GT EQUALS ELSE DOTPERCENT DOT DIV COMMA CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## WITH
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET ASSERT XOR
##
## Ends in an error in state: 919.
##
## node_equation -> ASSERT . pexpr(quantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON INITIAL STATE XOR
##
## Ends in an error in state: 877.
##
## state_decl -> INITIAL STATE . ident [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST COLON CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## INITIAL STATE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON INITIAL XOR
##
## Ends in an error in state: 876.
##
## state_decl -> INITIAL . STATE ident [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST COLON CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## INITIAL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON RETURNS DOTDOT XOR
##
## Ends in an error in state: 938.
##
## node_equation -> AUTOMATON option(ident) list(state) RETURNS DOTDOT . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## AUTOMATON option(ident) list(state) RETURNS DOTDOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON RETURNS SYM RCURLYBRACKET
##
## Ends in an error in state: 940.
##
## node_equation -> AUTOMATON option(ident) list(state) RETURNS ident_list . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## AUTOMATON option(ident) list(state) RETURNS ident_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 70, spurious reduction of production separated_nonempty_list(COMMA,ident) -> ident 
## In state 8, spurious reduction of production ident_list -> separated_nonempty_list(COMMA,ident) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON RETURNS XOR
##
## Ends in an error in state: 937.
##
## node_equation -> AUTOMATON option(ident) list(state) RETURNS . ident_list SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## node_equation -> AUTOMATON option(ident) list(state) RETURNS . DOTDOT SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## AUTOMATON option(ident) list(state) RETURNS
##

Syntax Error! Unexpected symbol found.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM COLON ARROW
##
## Ends in an error in state: 881.
##
## state -> state_decl option(COLON) . unless_transitions list(node_local_decl) LET list(node_equation) TEL until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## state -> state_decl option(COLON) . unless_transitions until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## state_decl option(COLON)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM LET AUTOMATON STATE SYM PROPERTY_SSBLOCKSTART
##
## Ends in an error in state: 923.
##
## list(node_equation) -> node_equation . list(node_equation) [ TEL ]
##
## The known suffix of the stack is as follows:
## node_equation
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 879, spurious reduction of production option(COLON) -> 
## In state 881, spurious reduction of production unless_transitions -> 
## In state 912, spurious reduction of production until_transitions -> 
## In state 916, spurious reduction of production state -> state_decl option(COLON) unless_transitions until_transitions 
## In state 932, spurious reduction of production nonempty_list(state) -> state 
## In state 935, spurious reduction of production node_equation -> AUTOMATON option(ident) nonempty_list(state) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM LET TEL XOR
##
## Ends in an error in state: 930.
##
## state -> state_decl option(COLON) unless_transitions list(node_local_decl) LET list(node_equation) TEL . until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## state_decl option(COLON) unless_transitions list(node_local_decl) LET list(node_equation) TEL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM LET XOR
##
## Ends in an error in state: 918.
##
## state -> state_decl option(COLON) unless_transitions list(node_local_decl) LET . list(node_equation) TEL until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## state_decl option(COLON) unless_transitions list(node_local_decl) LET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE IF TRUE RESUME ASSUME XOR
##
## Ends in an error in state: 893.
##
## branch -> IF pexpr(nonquantified) branch . END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE END ELSIF ELSE CONST CHECK AUTOMATON ASSUME ASSERT ]
## branch -> IF pexpr(nonquantified) branch . elsif_branch END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE END ELSIF ELSE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) branch
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE IF TRUE WITH
##
## Ends in an error in state: 891.
##
## branch -> IF pexpr(nonquantified) . branch END [ END ELSIF ELSE ]
## branch -> IF pexpr(nonquantified) . branch elsif_branch END [ END ELSIF ELSE ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE IF XOR
##
## Ends in an error in state: 890.
##
## branch -> IF . pexpr(nonquantified) branch END [ END ELSIF ELSE ]
## branch -> IF . pexpr(nonquantified) branch elsif_branch END [ END ELSIF ELSE ]
##
## The known suffix of the stack is as follows:
## IF
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE RESUME ASSUME ELSE RESTART ASSUME XOR
##
## Ends in an error in state: 901.
##
## branch -> IF pexpr(nonquantified) branch elsif_branch . END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE END ELSIF ELSE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) branch elsif_branch
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE RESUME ASSUME ELSE XOR
##
## Ends in an error in state: 898.
##
## elsif_branch -> ELSE . branch [ END ]
##
## The known suffix of the stack is as follows:
## ELSE
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE RESUME ASSUME ELSIF TRUE RESUME ASSUME XOR
##
## Ends in an error in state: 897.
##
## elsif_branch -> ELSIF pexpr(nonquantified) branch . [ END ]
## elsif_branch -> ELSIF pexpr(nonquantified) branch . elsif_branch [ END ]
##
## The known suffix of the stack is as follows:
## ELSIF pexpr(nonquantified) branch
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE RESUME ASSUME ELSIF TRUE WITH
##
## Ends in an error in state: 896.
##
## elsif_branch -> ELSIF pexpr(nonquantified) . branch [ END ]
## elsif_branch -> ELSIF pexpr(nonquantified) . branch elsif_branch [ END ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## ELSIF pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE RESUME ASSUME ELSIF XOR
##
## Ends in an error in state: 895.
##
## elsif_branch -> ELSIF . pexpr(nonquantified) branch [ END ]
## elsif_branch -> ELSIF . pexpr(nonquantified) branch elsif_branch [ END ]
##
## The known suffix of the stack is as follows:
## ELSIF
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE RESUME ASSUME XOR
##
## Ends in an error in state: 903.
##
## branch -> target . [ END ELSIF ELSE ]
## transition_branch -> IF pexpr(nonquantified) target . option(SEMICOLON) [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified) target
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF TRUE WITH
##
## Ends in an error in state: 889.
##
## branch -> IF pexpr(nonquantified) . branch END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
## branch -> IF pexpr(nonquantified) . branch elsif_branch END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> IF pexpr(nonquantified) . THEN pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN THEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL IF GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## transition_branch -> IF pexpr(nonquantified) . target option(SEMICOLON) [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## IF pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS IF XOR
##
## Ends in an error in state: 888.
##
## branch -> IF . pexpr(nonquantified) branch END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
## branch -> IF . pexpr(nonquantified) branch elsif_branch END [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
## pexpr(nonquantified) -> IF . pexpr(nonquantified) THEN pexpr(nonquantified) ELSE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## transition_branch -> IF . pexpr(nonquantified) target option(SEMICOLON) [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## IF
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS RESTART XOR
##
## Ends in an error in state: 886.
##
## target -> RESTART . target_state [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE END ELSIF ELSE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## RESTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS RESUME SYM SEMICOLON XOR
##
## Ends in an error in state: 905.
##
## unless_transitions -> UNLESS transition_branch . unless_transitions [ VAR UNTIL TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## UNLESS transition_branch
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS RESUME SYM XOR
##
## Ends in an error in state: 910.
##
## transition_branch -> branch . option(SEMICOLON) [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## branch
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS RESUME XOR
##
## Ends in an error in state: 883.
##
## target -> RESUME . target_state [ VAR UNTIL UNLESS TEL SYM STATE SEMICOLON RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE END ELSIF ELSE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## RESUME
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS TRUE RESUME ASSUME XOR
##
## Ends in an error in state: 908.
##
## transition_branch -> pexpr(nonquantified) target . option(SEMICOLON) [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified) target
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS TRUE WITH
##
## Ends in an error in state: 907.
##
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN RSH RESUME RESTART PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## transition_branch -> pexpr(nonquantified) . target option(SEMICOLON) [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNLESS XOR
##
## Ends in an error in state: 882.
##
## unless_transitions -> UNLESS . transition_branch unless_transitions [ VAR UNTIL TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## UNLESS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNTIL RESUME ASSUME VAR
##
## Ends in an error in state: 914.
##
## until_transitions -> UNTIL transition_branch . until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## UNTIL transition_branch
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 910, spurious reduction of production option(SEMICOLON) -> 
## In state 911, spurious reduction of production transition_branch -> branch option(SEMICOLON) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM UNTIL XOR
##
## Ends in an error in state: 913.
##
## until_transitions -> UNTIL . transition_branch until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## UNTIL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE SYM XOR
##
## Ends in an error in state: 879.
##
## state -> state_decl . option(COLON) unless_transitions list(node_local_decl) LET list(node_equation) TEL until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## state -> state_decl . option(COLON) unless_transitions until_transitions [ TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN INITIAL GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## state_decl
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON STATE XOR
##
## Ends in an error in state: 874.
##
## state_decl -> STATE . ident [ VAR UNTIL UNLESS TEL SYM STATE RETURNS REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN LET INITIAL GUARANTEE ENSURE CONST COLON CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## STATE
##

Syntax Error! Perhaps an invalid symbol in assignment.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON SYM IMPORTED
##
## Ends in an error in state: 873.
##
## node_equation -> AUTOMATON option(ident) . list(state) RETURNS ident_list SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## node_equation -> AUTOMATON option(ident) . list(state) RETURNS DOTDOT SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## node_equation -> AUTOMATON option(ident) . nonempty_list(state) [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## AUTOMATON option(ident)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET AUTOMATON XOR
##
## Ends in an error in state: 872.
##
## node_equation -> AUTOMATON . option(ident) list(state) RETURNS ident_list SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## node_equation -> AUTOMATON . option(ident) list(state) RETURNS DOTDOT SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## node_equation -> AUTOMATON . option(ident) nonempty_list(state) [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## AUTOMATON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET CHECK STRING ASSERT
##
## Ends in an error in state: 869.
##
## check -> CHECK option(STRING) . pexpr(quantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## CHECK option(STRING)
##

Syntax Error! Unexpected parenthesis.
Array indexing is done using square brackets e.g. A[i]

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET CHECK TRUE WITH
##
## Ends in an error in state: 870.
##
## check -> CHECK option(STRING) pexpr(quantified) . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## CHECK option(STRING) pexpr(quantified)
##

Syntax Error! Unexpected parenthesis.
Array indexing is done using square brackets e.g. `A[i]` 

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET CHECK XOR
##
## Ends in an error in state: 868.
##
## check -> CHECK . option(STRING) pexpr(quantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## CHECK
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET LPAREN SYM EQUALS
##
## Ends in an error in state: 855.
##
## left_side -> LPAREN struct_item_list . RPAREN [ EQUALS ]
##
## The known suffix of the stack is as follows:
## LPAREN struct_item_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 860, spurious reduction of production struct_item -> ident 
## In state 857, spurious reduction of production separated_nonempty_list(COMMA,struct_item) -> struct_item 
## In state 867, spurious reduction of production struct_item_list -> separated_nonempty_list(COMMA,struct_item) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET LPAREN XOR
##
## Ends in an error in state: 853.
##
## left_side -> LPAREN . struct_item_list RPAREN [ EQUALS ]
## left_side -> LPAREN . RPAREN [ EQUALS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_B_ANNOT COLON TRUE XOR
##
## Ends in an error in state: 851.
##
## main_annot -> MAIN_B_ANNOT COLON boolean . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_B_ANNOT COLON boolean
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_B_ANNOT COLON XOR
##
## Ends in an error in state: 850.
##
## main_annot -> MAIN_B_ANNOT COLON . boolean SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_B_ANNOT COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_B_ANNOT XOR
##
## Ends in an error in state: 849.
##
## main_annot -> MAIN_B_ANNOT . COLON boolean SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_B_ANNOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_PSBLOCKSTART COLON TRUE SEMICOLON PROPERTY_SSBLOCKSTART
##
## Ends in an error in state: 845.
##
## main_annot -> MAIN_PSBLOCKSTART COLON boolean option(SEMICOLON) . PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_PSBLOCKSTART COLON boolean option(SEMICOLON)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_PSBLOCKSTART COLON TRUE XOR
##
## Ends in an error in state: 844.
##
## main_annot -> MAIN_PSBLOCKSTART COLON boolean . option(SEMICOLON) PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_PSBLOCKSTART COLON boolean
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_PSBLOCKSTART COLON XOR
##
## Ends in an error in state: 843.
##
## main_annot -> MAIN_PSBLOCKSTART COLON . boolean option(SEMICOLON) PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_PSBLOCKSTART COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_PSBLOCKSTART SEMICOLON PROPERTY_SSBLOCKSTART
##
## Ends in an error in state: 847.
##
## main_annot -> MAIN_PSBLOCKSTART option(SEMICOLON) . PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_PSBLOCKSTART option(SEMICOLON)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_PSBLOCKSTART XOR
##
## Ends in an error in state: 842.
##
## main_annot -> MAIN_PSBLOCKSTART . option(SEMICOLON) PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## main_annot -> MAIN_PSBLOCKSTART . COLON boolean option(SEMICOLON) PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_PSBLOCKSTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_P_ANNOT XOR
##
## Ends in an error in state: 840.
##
## main_annot -> MAIN_P_ANNOT . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_P_ANNOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_SSBLOCKSTART COLON TRUE SEMICOLON XOR
##
## Ends in an error in state: 836.
##
## main_annot -> MAIN_SSBLOCKSTART COLON boolean option(SEMICOLON) . SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_SSBLOCKSTART COLON boolean option(SEMICOLON)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_SSBLOCKSTART COLON TRUE XOR
##
## Ends in an error in state: 835.
##
## main_annot -> MAIN_SSBLOCKSTART COLON boolean . option(SEMICOLON) SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_SSBLOCKSTART COLON boolean
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_SSBLOCKSTART COLON XOR
##
## Ends in an error in state: 832.
##
## main_annot -> MAIN_SSBLOCKSTART COLON . boolean option(SEMICOLON) SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_SSBLOCKSTART COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_SSBLOCKSTART SEMICOLON XOR
##
## Ends in an error in state: 838.
##
## main_annot -> MAIN_SSBLOCKSTART option(SEMICOLON) . SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_SSBLOCKSTART option(SEMICOLON)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_SSBLOCKSTART SSBLOCKEND XOR
##
## Ends in an error in state: 944.
##
## list(node_item) -> node_item . list(node_item) [ TEL ]
##
## The known suffix of the stack is as follows:
## node_item
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET MAIN_SSBLOCKSTART XOR
##
## Ends in an error in state: 831.
##
## main_annot -> MAIN_SSBLOCKSTART . option(SEMICOLON) SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## main_annot -> MAIN_SSBLOCKSTART . COLON boolean option(SEMICOLON) SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## MAIN_SSBLOCKSTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_ANNOT STRING ASSERT
##
## Ends in an error in state: 828.
##
## property -> PROPERTY_ANNOT option(STRING) . pexpr(quantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_ANNOT option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_ANNOT TRUE WITH
##
## Ends in an error in state: 829.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## property -> PROPERTY_ANNOT option(STRING) pexpr(quantified) . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_ANNOT option(STRING) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_ANNOT XOR
##
## Ends in an error in state: 827.
##
## property -> PROPERTY_ANNOT . option(STRING) pexpr(quantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_ANNOT
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART COLON TRUE SEMICOLON XOR
##
## Ends in an error in state: 822.
##
## property -> PROPERTY_PSBLOCKSTART option(STRING) COLON pexpr(quantified) SEMICOLON . PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART option(STRING) COLON pexpr(quantified) SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART COLON TRUE WITH
##
## Ends in an error in state: 821.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## property -> PROPERTY_PSBLOCKSTART option(STRING) COLON pexpr(quantified) . SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART option(STRING) COLON pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART COLON XOR
##
## Ends in an error in state: 820.
##
## property -> PROPERTY_PSBLOCKSTART option(STRING) COLON . pexpr(quantified) SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## two_colons -> COLON . COLON [ SYM REQUIRE MODE GUARANTEE ENSURE ASSUME ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART option(STRING) COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART STRING ASSERT
##
## Ends in an error in state: 819.
##
## property -> PROPERTY_PSBLOCKSTART option(STRING) . pexpr(quantified) SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## property -> PROPERTY_PSBLOCKSTART option(STRING) . COLON pexpr(quantified) SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART TRUE SEMICOLON XOR
##
## Ends in an error in state: 825.
##
## property -> PROPERTY_PSBLOCKSTART option(STRING) pexpr(quantified) SEMICOLON . PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART option(STRING) pexpr(quantified) SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART TRUE WITH
##
## Ends in an error in state: 824.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## property -> PROPERTY_PSBLOCKSTART option(STRING) pexpr(quantified) . SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART option(STRING) pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_PSBLOCKSTART XOR
##
## Ends in an error in state: 818.
##
## property -> PROPERTY_PSBLOCKSTART . option(STRING) pexpr(quantified) SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## property -> PROPERTY_PSBLOCKSTART . option(STRING) COLON pexpr(quantified) SEMICOLON PSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_PSBLOCKSTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART COLON COLON XOR
##
## Ends in an error in state: 811.
##
## two_colons -> COLON . COLON [ SYM REQUIRE MODE GUARANTEE ENSURE ASSUME ]
## two_colons -> COLON COLON . [ SYM REQUIRE MODE GUARANTEE ENSURE ASSUME ]
##
## The known suffix of the stack is as follows:
## COLON COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART COLON TRUE SEMICOLON XOR
##
## Ends in an error in state: 813.
##
## property -> PROPERTY_SSBLOCKSTART option(STRING) COLON pexpr(quantified) SEMICOLON . SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART option(STRING) COLON pexpr(quantified) SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART COLON TRUE WITH
##
## Ends in an error in state: 812.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## property -> PROPERTY_SSBLOCKSTART option(STRING) COLON pexpr(quantified) . SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART option(STRING) COLON pexpr(quantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART COLON XOR
##
## Ends in an error in state: 810.
##
## property -> PROPERTY_SSBLOCKSTART option(STRING) COLON . pexpr(quantified) SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## two_colons -> COLON . COLON [ SYM REQUIRE MODE GUARANTEE ENSURE ASSUME ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART option(STRING) COLON
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART STRING ASSERT
##
## Ends in an error in state: 809.
##
## property -> PROPERTY_SSBLOCKSTART option(STRING) . pexpr(quantified) SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## property -> PROPERTY_SSBLOCKSTART option(STRING) . COLON pexpr(quantified) SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART option(STRING)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART TRUE SEMICOLON XOR
##
## Ends in an error in state: 816.
##
## property -> PROPERTY_SSBLOCKSTART option(STRING) pexpr(quantified) SEMICOLON . SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART option(STRING) pexpr(quantified) SEMICOLON
##

Syntax Error! Perhaps missing variable assignment for expression.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART TRUE WITH
##
## Ends in an error in state: 815.
##
## pexpr(quantified) -> pexpr(quantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PIPE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MINUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . PLUS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MULT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . DIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . INTDIV pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . MOD pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . AND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . OR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . XOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . IMPL pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVAND pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . BVOR pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . RSH pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GT pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . LTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . GTE pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . EQUALS pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . NEQ pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(quantified) -> pexpr(quantified) . ARROW pexpr(quantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## property -> PROPERTY_SSBLOCKSTART option(STRING) pexpr(quantified) . SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART option(STRING) pexpr(quantified)
##

Syntax Error! Perhaps missing variable assignment for expression.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET PROPERTY_SSBLOCKSTART XOR
##
## Ends in an error in state: 808.
##
## property -> PROPERTY_SSBLOCKSTART . option(STRING) pexpr(quantified) SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## property -> PROPERTY_SSBLOCKSTART . option(STRING) COLON pexpr(quantified) SEMICOLON SSBLOCKEND [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## PROPERTY_SSBLOCKSTART
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM COMMA XOR
##
## Ends in an error in state: 858.
##
## separated_nonempty_list(COMMA,struct_item) -> struct_item COMMA . separated_nonempty_list(COMMA,struct_item) [ RPAREN EQUALS ]
##
## The known suffix of the stack is as follows:
## struct_item COMMA
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM EQUALS TRUE WITH
##
## Ends in an error in state: 927.
##
## node_equation -> left_side EQUALS pexpr(nonquantified) . SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
## pexpr(nonquantified) -> pexpr(nonquantified) . CARET pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOTPERCENT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSQBRACKET array_slice RSQBRACKET [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DOT ident [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PIPE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MINUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . PLUS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MULT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . DIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . INTDIV pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . MOD pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . AND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . OR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . XOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . IMPL pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVAND pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . BVOR pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . RSH pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GT pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . LTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . GTE pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . EQUALS pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . NEQ pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . WHEN clock_expr [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
## pexpr(nonquantified) -> pexpr(nonquantified) . ARROW pexpr(nonquantified) [ XOR WHEN SEMICOLON RSH PLUS PIPE OR NEQ MULT MOD MINUS LTE LT LSQBRACKET LSH INTDIV IMPL GTE GT EQUALS DOTPERCENT DOT DIV CARET BVOR BVAND ARROW AND ]
##
## The known suffix of the stack is as follows:
## left_side EQUALS pexpr(nonquantified)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM EQUALS XOR
##
## Ends in an error in state: 926.
##
## node_equation -> left_side EQUALS . pexpr(nonquantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## left_side EQUALS
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM LSQBRACKET SYM RSQBRACKET XOR
##
## Ends in an error in state: 865.
##
## nonempty_list(index_var) -> index_var . [ RPAREN EQUALS COMMA ]
## nonempty_list(index_var) -> index_var . nonempty_list(index_var) [ RPAREN EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## index_var
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM LSQBRACKET SYM XOR
##
## Ends in an error in state: 862.
##
## index_var -> LSQBRACKET ident . RSQBRACKET [ RPAREN LSQBRACKET EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM LSQBRACKET XOR
##
## Ends in an error in state: 861.
##
## index_var -> LSQBRACKET . ident RSQBRACKET [ RPAREN LSQBRACKET EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## LSQBRACKET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM RPAREN
##
## Ends in an error in state: 925.
##
## node_equation -> left_side . EQUALS pexpr(nonquantified) SEMICOLON [ TEL SYM REQUIRE PROPERTY_SSBLOCKSTART PROPERTY_PSBLOCKSTART PROPERTY_ANNOT MODE MAIN_SSBLOCKSTART MAIN_P_ANNOT MAIN_PSBLOCKSTART MAIN_B_ANNOT LPAREN GUARANTEE ENSURE CHECK AUTOMATON ASSUME ASSERT ]
##
## The known suffix of the stack is as follows:
## left_side
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 860, spurious reduction of production struct_item -> ident 
## In state 857, spurious reduction of production separated_nonempty_list(COMMA,struct_item) -> struct_item 
## In state 867, spurious reduction of production struct_item_list -> separated_nonempty_list(COMMA,struct_item) 
## In state 922, spurious reduction of production left_side -> struct_item_list 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET SYM XOR
##
## Ends in an error in state: 860.
##
## struct_item -> ident . [ RPAREN EQUALS COMMA ]
## struct_item -> ident . nonempty_list(index_var) [ RPAREN EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET TEL XOR
##
## Ends in an error in state: 950.
##
## node_def -> list(node_local_decl) LET list(node_item) TEL . option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## list(node_local_decl) LET list(node_item) TEL
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN LET XOR
##
## Ends in an error in state: 807.
##
## node_def -> list(node_local_decl) LET . list(node_item) TEL option(node_sep) [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## list(node_local_decl) LET
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN SEMICOLON CONDACT
##
## Ends in an error in state: 458.
##
## node_decl -> ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) . option(contract_spec) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN TYPE
##
## Ends in an error in state: 774.
##
## decl -> NODE node_decl . node_def [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE node_decl
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 456, spurious reduction of production option(SEMICOLON) -> 
## In state 458, spurious reduction of production option(contract_spec) -> 
## In state 772, spurious reduction of production node_decl -> ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN VAR SYM COLON ASSUME RPAREN
##
## Ends in an error in state: 778.
##
## var_decl -> clocked_typed_idents . SEMICOLON [ VAR SYM REQUIRE MODE LPAREN LET GUARANTEE ENSURE CONST ASSUME ]
##
## The known suffix of the stack is as follows:
## clocked_typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
## In state 447, spurious reduction of production clocked_typed_idents -> typed_idents 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN VAR SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 776.
##
## nonempty_list(var_decl) -> var_decl . [ VAR LET CONST ]
## nonempty_list(var_decl) -> var_decl . nonempty_list(var_decl) [ VAR LET CONST ]
##
## The known suffix of the stack is as follows:
## var_decl
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN VAR XOR
##
## Ends in an error in state: 775.
##
## var_decls -> VAR . nonempty_list(var_decl) [ VAR LET CONST ]
##
## The known suffix of the stack is as follows:
## VAR
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN RPAREN XOR
##
## Ends in an error in state: 456.
##
## node_decl -> ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) . option(SEMICOLON) option(contract_spec) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents)
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN SYM COLON ASSUME RCURLYBRACKET
##
## Ends in an error in state: 447.
##
## clocked_typed_idents -> typed_idents . [ SEMICOLON RPAREN ]
## clocked_typed_idents -> typed_idents . WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 452.
##
## option(SEMICOLON) -> SEMICOLON . [ RPAREN ]
## tlist_tail(SEMICOLON,RPAREN,clocked_typed_idents) -> clocked_typed_idents SEMICOLON . tlist_tail(SEMICOLON,RPAREN,clocked_typed_idents) [ VAR TYPE SEMICOLON NODE LET FUNCTION EOF CONTRACT_SSATBLOCK CONTRACT_PSATBLOCK CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## clocked_typed_idents SEMICOLON
##

Syntax Error! Perhaps a missing/unbalanced parenthesis.

main: NODE SYM LPAREN RPAREN RETURNS LPAREN SYM COLON ASSUME WHEN ASSUME XOR
##
## Ends in an error in state: 451.
##
## tlist_tail(SEMICOLON,RPAREN,clocked_typed_idents) -> clocked_typed_idents . option(SEMICOLON) RPAREN [ VAR TYPE SEMICOLON NODE LET FUNCTION EOF CONTRACT_SSATBLOCK CONTRACT_PSATBLOCK CONTRACT CONST ]
## tlist_tail(SEMICOLON,RPAREN,clocked_typed_idents) -> clocked_typed_idents . SEMICOLON tlist_tail(SEMICOLON,RPAREN,clocked_typed_idents) [ VAR TYPE SEMICOLON NODE LET FUNCTION EOF CONTRACT_SSATBLOCK CONTRACT_PSATBLOCK CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## clocked_typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 123, spurious reduction of production clock_expr -> ident 
## In state 449, spurious reduction of production clocked_typed_idents -> typed_idents WHEN clock_expr 
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN SYM COLON ASSUME WHEN XOR
##
## Ends in an error in state: 448.
##
## clocked_typed_idents -> typed_idents WHEN . clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## typed_idents WHEN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS LPAREN XOR
##
## Ends in an error in state: 436.
##
## tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) -> LPAREN . tlist_tail(SEMICOLON,RPAREN,clocked_typed_idents) [ VAR TYPE SEMICOLON NODE LET FUNCTION EOF CONTRACT_SSATBLOCK CONTRACT_PSATBLOCK CONTRACT CONST ]
## tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) -> LPAREN . RPAREN [ VAR TYPE SEMICOLON NODE LET FUNCTION EOF CONTRACT_SSATBLOCK CONTRACT_PSATBLOCK CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

main: NODE SYM LPAREN RPAREN RETURNS XOR
##
## Ends in an error in state: 435.
##
## node_decl -> ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS . tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS
##

Syntax Error! Perhaps a missing return statement

main: NODE SYM LPAREN RPAREN XOR
##
## Ends in an error in state: 434.
##
## node_decl -> ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) . RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) [ VAR TYPE NODE LET FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## ident loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents)
##

Syntax Error! Perhaps a missing or incomplete `return` clause in node specification.

main: NODE SYM LPAREN SYM COLON ASSUME RCURLYBRACKET
##
## Ends in an error in state: 426.
##
## const_clocked_typed_idents -> const_typed_idents . [ SEMICOLON RPAREN ]
## const_clocked_typed_idents -> const_typed_idents . WHEN clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## const_typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
## In state 419, spurious reduction of production const_typed_idents -> boption(CONST) typed_idents 
##

Syntax Error!

main: NODE SYM LPAREN SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 430.
##
## option(SEMICOLON) -> SEMICOLON . [ RPAREN ]
## tlist_tail(SEMICOLON,RPAREN,const_clocked_typed_idents) -> const_clocked_typed_idents SEMICOLON . tlist_tail(SEMICOLON,RPAREN,const_clocked_typed_idents) [ RETURNS ]
##
## The known suffix of the stack is as follows:
## const_clocked_typed_idents SEMICOLON
##

Syntax Error!

main: NODE SYM LPAREN SYM COLON ASSUME WHEN ASSUME XOR
##
## Ends in an error in state: 429.
##
## tlist_tail(SEMICOLON,RPAREN,const_clocked_typed_idents) -> const_clocked_typed_idents . option(SEMICOLON) RPAREN [ RETURNS ]
## tlist_tail(SEMICOLON,RPAREN,const_clocked_typed_idents) -> const_clocked_typed_idents . SEMICOLON tlist_tail(SEMICOLON,RPAREN,const_clocked_typed_idents) [ RETURNS ]
##
## The known suffix of the stack is as follows:
## const_clocked_typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 123, spurious reduction of production clock_expr -> ident 
## In state 428, spurious reduction of production const_clocked_typed_idents -> const_typed_idents WHEN clock_expr 
##

Syntax Error!

main: NODE SYM LPAREN SYM COLON ASSUME WHEN XOR
##
## Ends in an error in state: 427.
##
## const_clocked_typed_idents -> const_typed_idents WHEN . clock_expr [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## const_typed_idents WHEN
##

Syntax Error!

main: NODE SYM LPAREN XOR
##
## Ends in an error in state: 406.
##
## tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) -> LPAREN . tlist_tail(SEMICOLON,RPAREN,const_clocked_typed_idents) [ RETURNS ]
## tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) -> LPAREN . RPAREN [ RETURNS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Syntax Error!

main: NODE SYM XOR
##
## Ends in an error in state: 955.
##
## node_decl -> ident . loption(static_params) tlist(LPAREN,SEMICOLON,RPAREN,const_clocked_typed_idents) RETURNS tlist(LPAREN,SEMICOLON,RPAREN,clocked_typed_idents) option(SEMICOLON) option(contract_spec) [ VAR LET CONST ]
## node_param_inst -> NODE ident . EQUALS ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE ident
##

Syntax Error! Perhaps an ill-formed contract specification

main: NODE XOR
##
## Ends in an error in state: 389.
##
## decl -> NODE . node_decl node_def [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## decl -> NODE . IMPORTED node_decl [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## node_param_inst -> NODE . ident EQUALS ident tlist(LPARAMBRACKET,SEMICOLON,RPARAMBRACKET,node_call_static_param) SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## NODE
##

Syntax Error!

main: TYPE SYM COMMA XOR
##
## Ends in an error in state: 71.
##
## separated_nonempty_list(COMMA,ident) -> ident COMMA . separated_nonempty_list(COMMA,ident) [ SEMICOLON RCURLYBRACKET EQUALS COLON ]
##
## The known suffix of the stack is as follows:
## ident COMMA
##

Syntax Error!

main: TYPE SYM EQUALS LCURLYBRACKET RCURLYBRACKET XOR
##
## Ends in an error in state: 375.
##
## type_decl -> TYPE ident_list EQUALS record_type . SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## TYPE ident_list EQUALS record_type
##

Syntax Error!

main: TYPE SYM EQUALS LCURLYBRACKET SYM COLON ASSUME SEMICOLON XOR
##
## Ends in an error in state: 381.
##
## option(SEMICOLON) -> SEMICOLON . [ RCURLYBRACKET ]
## tlist_tail(SEMICOLON,RCURLYBRACKET,typed_idents) -> typed_idents SEMICOLON . tlist_tail(SEMICOLON,RCURLYBRACKET,typed_idents) [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## typed_idents SEMICOLON
##

Syntax Error!

main: TYPE SYM EQUALS LCURLYBRACKET SYM COLON ASSUME WHEN
##
## Ends in an error in state: 380.
##
## tlist_tail(SEMICOLON,RCURLYBRACKET,typed_idents) -> typed_idents . option(SEMICOLON) RCURLYBRACKET [ SEMICOLON ]
## tlist_tail(SEMICOLON,RCURLYBRACKET,typed_idents) -> typed_idents . SEMICOLON tlist_tail(SEMICOLON,RCURLYBRACKET,typed_idents) [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## typed_idents
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 242, spurious reduction of production typed_idents -> ident_list_pos COLON lustre_type 
##

Syntax Error!

main: TYPE SYM EQUALS LCURLYBRACKET XOR
##
## Ends in an error in state: 378.
##
## tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,typed_idents) -> LCURLYBRACKET . tlist_tail(SEMICOLON,RCURLYBRACKET,typed_idents) [ SEMICOLON ]
## tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,typed_idents) -> LCURLYBRACKET . RCURLYBRACKET [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## LCURLYBRACKET
##

Syntax Error!

main: TYPE SYM EQUALS STRUCT LAST
##
## Ends in an error in state: 377.
##
## record_type -> option(STRUCT) . tlist(LCURLYBRACKET,SEMICOLON,RCURLYBRACKET,typed_idents) [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## option(STRUCT)
##

Syntax Error!

main: TYPE SYM EQUALS UINT8 XOR
##
## Ends in an error in state: 387.
##
## array_type -> lustre_type . CARET pexpr(nonquantified) [ SEMICOLON CARET ]
## type_decl -> TYPE ident_list EQUALS lustre_type . SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## TYPE ident_list EQUALS lustre_type
##

Syntax Error!

main: TYPE SYM EQUALS XOR
##
## Ends in an error in state: 11.
##
## type_decl -> TYPE ident_list EQUALS . lustre_type SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## type_decl -> TYPE ident_list EQUALS . record_type SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## TYPE ident_list EQUALS
##

Syntax Error!

main: TYPE SYM RCURLYBRACKET
##
## Ends in an error in state: 9.
##
## type_decl -> TYPE ident_list . SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## type_decl -> TYPE ident_list . EQUALS lustre_type SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## type_decl -> TYPE ident_list . EQUALS record_type SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## TYPE ident_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 70, spurious reduction of production separated_nonempty_list(COMMA,ident) -> ident 
## In state 8, spurious reduction of production ident_list -> separated_nonempty_list(COMMA,ident) 
##

Syntax Error!

main: TYPE SYM SEMICOLON XOR
##
## Ends in an error in state: 981.
##
## list(decl) -> decl . list(decl) [ EOF ]
##
## The known suffix of the stack is as follows:
## decl
##

Syntax Error!

main: TYPE SYM XOR
##
## Ends in an error in state: 70.
##
## separated_nonempty_list(COMMA,ident) -> ident . [ SEMICOLON RCURLYBRACKET EQUALS COLON ]
## separated_nonempty_list(COMMA,ident) -> ident . COMMA separated_nonempty_list(COMMA,ident) [ SEMICOLON RCURLYBRACKET EQUALS COLON ]
##
## The known suffix of the stack is as follows:
## ident
##

Syntax Error!

main: TYPE XOR
##
## Ends in an error in state: 1.
##
## type_decl -> TYPE . ident_list SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## type_decl -> TYPE . ident_list EQUALS lustre_type SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
## type_decl -> TYPE . ident_list EQUALS record_type SEMICOLON [ TYPE NODE FUNCTION EOF CONTRACT CONST ]
##
## The known suffix of the stack is as follows:
## TYPE
##

Syntax Error!

main: XOR
##
## Ends in an error in state: 0.
##
## main' -> . main [ # ]
##
## The known suffix of the stack is as follows:
##
##

Syntax Error!

